{
    "List the total number of customers and suppliers in each nation. Order by nation name": {
        "context_id": "No recomendations found",
        "similar_queries": "1. Count customers and suppliers by region:\n\n# Count customers and suppliers by region\nnation_counts = regions.CALCULATE(\n    region_name=name,\n    n_customers=COUNT(nations.customers),\n    n_suppliers=COUNT(nations.suppliers)\n)"
    },
    "Find the top 5 nations with the highest number of orders placed by their customers in 1995.": {
        "context_id": "No recomendations found",
        "similar_queries": "1. Top 5 nations by average order value in 1995:\n\norders_in_1995= customers.orders.WHERE(YEAR(order_date) == 1995)\n\ntop_5_nations = nations.CALCULATE(\n    nation_name=name,\n    average_orders= AVG(orders_in_1995), \n    order_count=COUNT(orders_in_1995)\n).TOP_K(5, by=average_orders.DESC())"
    },
    "Find the top 3 regions with the most distinct customers": {
        "context_id": "No recomendations found",
        "similar_queries": "1. Find the top 10 with the most distinct suppliers\n\ntop_regions = regions.CALCULATE(\n    region_name=name,\n    suppliers_count=NDISTINCT(nations.suppliers.key)\n).TOP_K(10, by=customer_count.DESC())"
    },
    "Find parts that are supplied by at least five different nations. Show the part name and the count of distinct nations that supply each part": {
        "context_id": "No recomendations found",
        "similar_queries": "1. Find the top 10 with the most distinct suppliers\n\ntop_regions = regions.CALCULATE(\n    region_name=name,\n    suppliers_count=NDISTINCT(nations.suppliers.key)\n).TOP_K(10, by=customer_count.DESC())\n 2.Find customers who have ordered at least 20 different parts. Show the customer name and the count of distinct parts they have ordered.\n PARTITION(customers, name='c', by=name).CALCULATE(cust_name=name, parts_count=NDISTINCT(c.orders.lines.part.name)).WHERE(parts_count >= 20)"
    }
}