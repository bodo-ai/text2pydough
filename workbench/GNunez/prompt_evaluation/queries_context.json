{
    "List the total number of customers and suppliers in each nation. Order by nation name": {
        "context_id": null,
        "similar_queries": "1. Count customers and suppliers by region:\n\n# Count customers and suppliers by region\nnation_counts = regions.CALCULATE(\n    region_name=name,\n    n_customers=COUNT(nations.customers),\n    n_suppliers=COUNT(nations.suppliers)\n)"
    },
    "Find the top 5 nations with the highest number of orders placed by their customers in 1995.": {
        "context_id": null,
        "similar_queries": "1. Top 5 nations by average order value in 1995:\n\norders_in_1995= customers.orders.WHERE(YEAR(order_date) == 1995)\n\ntop_5_nations = nations.CALCULATE(\n    nation_name=name,\n    average_orders= AVG(orders_in_1995), \n    order_count=COUNT(orders_in_1995)\n).TOP_K(5, by=average_orders.DESC())"
    },
    "Find the region name with the highest total order value in 1996. The total order value is defined as potential revenue, defined as the sum of extended_price * (1 - discount)": {
        "context_id": null,
        "similar_queries": null,
        "redefined_question": "Find the region name with the highest total order value in 1996. The total order value is defined as potential revenue, defined as the sum of extended_price * (1 - discount). Return the region name and total order value"
    },
    "Find the top 3 regions with the most distinct customers": {
        "context_id": "10. Functions to use NDISTINCT, TOP_K",
        "similar_queries": "1. Find the top 10 with the most distinct suppliers\n\ntop_regions = regions.CALCULATE(\n    region_name=name,\n    suppliers_count=NDISTINCT(nations.suppliers.key)\n).TOP_K(10, by=customer_count.DESC())"
    },
    "Find the names of all customers and number of orders placed in 1995 in Europe who have an account balance greater than $700 and placed at least one order in 1995. Sorted in descending order by the number of orders. Do not use HAS function": {
        "context_id": null,
        "similar_queries": null
    },
    "Find suppliers in each nation who have an availqty of more than 1000 units of parts with 'BRASS' in their type. List the supplier name, nation name, and the sum of the parts supplied.": {
        "context_id": null,
        "similar_queries": null
    },
    "Find parts names that are supplied by at least five different nations. Show the part name and the count of distinct nations that supply each part": {
        "context_id": "10. You can ONLY solve this questions using PARTITION and NDISTINCT functions. You cannot avoid this functions.",
        "similar_queries": null,
        "redefined_question": "Apply PARTITION function in `parts` collection, partinioning it by `name`. Then, find those parts that are supplied by at least five different nations. Show the part name and the count of distinct nations that supply each part."
    },
    "Which 10 customers purchased the highest quantity of products with 'green' in the product name during 1998? Provide their names, address, and the total quantity ordered.": {
        "context_id": null,
        "similar_queries": null
    },
    "Which is the average discount applied on orders for each market segment? Sorted in descending order": {
        "context_id": "10. As recommendation use the PARTITION",
        "similar_queries": null
    },

    "Which is the average order value per Nation? List the nation name and average order value. The order value is defined as extended_price * quantity": {
        "context_id": null,
        "similar_queries": null,
        "redefined_question": "Apply PARTITION in the `nations` collection, partinioning it by `name`. Then calculate the average order value? Return the `nation_name` and `average_order_value`. Definition: `average_order_value` = `AVG(extended_price * quantity)`"
    },

    "For each of the 5 largest part sizes, find the part of that size with the largest retail price":{
        "context_id": "10. You must use PARTITION and RANKING",
        "similar_queries": null,
        "redefined_question": "Identify the part with the highest retail price for each of the 5 largest part sizes. Return the Part Key, Name, size and Retail Price, allow ties and order by part size"

    },
    "Retrieves the top 3 suppliers with the highest total sales for each region": {
        "context_id": "10. You must solve the question using the RANKING function.",
        "similar_queries": null,
        "redefined_question": "Retrieves the top 3 suppliers with the highest total sales for each region. Total sales is defined as extended price * quantity"

    },
    "What 3 product brands saw the largest positive change in quantity sold from 1995 to 1996.":{
        "context_id": null,
        "similar_queries": null,
        "redefined_question": "What 3 product brands saw the largest positive change in quantity sold from 1995 to 1996, sorted in descending order by the difference. Use the order date to filter and show the brand name, the quantity sold in 1995 and 1996 and the difference."

    },
    "What were the 20 most popular products (parts) within each market segment in 1998?": {
        "context_id": "10. You must use PARTITION and RANKING.",
        "similar_queries":null,
        "redefined_question": "For each market segment, find the 20 most popular products (parts) in 1998? Return the market segment, the product name and the total quantity sold"
    },
    "What is the february 1996 SPM for the almond antique blue royal burnished part in China? SPM (Selling Profit Margin) = (Total Amount from Sells - (Tax + Commission)) / Total Amount from Sells * 100":{
        "context_id": null,
        "similar_queries": null,
        "redefined_question": "What was the Selling Profit Margin (SPM) for the 'rosy black navajo cream sky' part in China in February 1996? The SPM is calculated as: (Total Sales Amount - (Tax + Commission)) / Total Sales Amount * 100. Consider the order date and the total number of orders placed in 1996, as they represent the total sales, to determine the SPM and the supplierâ€™s country. Tax is extended price * tax, comission is extended price * discount and total sales is extended price"

    },
    "Retrieve the customer name of the customers who placed more orders in 1995 than in 1994":{
        "context_id": null,
        "similar_queries": null,
        "redefined_question": "Retrieve the customer name of the customers who placed more orders in 1995 than in 1994. Just return the customers name."
    },

    "Find suppliers in each nation who have a total availqty of more than 1000 units of parts with 'BRASS' in their type. List the supplier name, nation name, and the sum of the parts supplied.":{
        "context_id": null,
        "similar_queries": "1. Find the total number of copper part types sold by each supplier. Display the supplier name, country, and the count of copper parts sold.\nsupplier_parts = nations.CALCULATE(nation_name= name).suppliers.CALCULATE(nation_name=nation_name,supplier_name=name,count_copper=COUNT(supply_records.WHERE(CONTAINS(part.part_type, 'COPPER')))).WHERE(count_copper > 20).CALCULATE(supplier_name=supplier_name, nation_name=nation_name, total_parts_copper=count_copper)."
    },
    "Break down how many customers, by country code of their phone number (only including customers from certain country codes), have not placed an order but have an account balance that is above the average for all positive account balances of such customers. Also include the total balance for all such customers for each country code. The country codes to include are 13, 23, 29, 30, 18 and 17.":{
        "context_id": null,
        "similar_queries": null,
        "redefined_question": "Break down how many customers, by country code of their phone number (only including customers from certain country codes), have not placed an order but have an account balance that is above the average for all positive account balances of such customers. Also include the total balance for all such customers for each country code. The country codes to include are 13, 23, 29, 30, 18 and 17. The country code are the first two digits"

    }

}