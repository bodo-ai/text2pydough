question_id,question,ground_truth_sql,generated_response,generated_pydough,evaluation_match,evaluation_explanation,error
5,Find the names of all customers and number of orders placed in 1995 in Europe who have an account balance greater than $700 and placed at least one order in 1995. Sorted in descending order by the number of orders.,"SELECT c.c_name AS customer_name, COUNT(o.o_orderkey) AS order_count_1995 FROM customer c JOIN nation n ON c.c_nationkey = n.n_nationkey JOIN region r ON n.n_regionkey = r.r_regionkey JOIN orders o ON c.c_custkey = o.o_custkey WHERE r.r_name = 'EUROPE' AND c.c_acctbal > 700 AND o.o_orderdate BETWEEN '1995-01-01' AND '1995-12-31' GROUP BY c.c_name, c.c_acctbal ORDER BY order_count_1995 DESC, c.c_acctbal DESC;","```text
1. Analysis of the question
The question asks to find customers in Europe with specific criteria: account balance greater than $700, and having placed at least one order in 1995. The output should include the customer's name and the number of orders they placed in 1995, sorted by the number of orders in descending order.

2. Step-by-step explanation of the solution
- Filter customers based on the condition that they are from Europe, have an account balance greater than $700, and have placed at least one order in 1995.
- Calculate the customer's name and the number of orders placed in 1995.
- Sort the results in descending order based on the number of orders.

3. The PyDough code in a Python code block
```python
customers_1995 = customers.WHERE(
    (nation.region.name == ""EUROPE"") &
    (acctbal > 700) &
    (HAS(orders.WHERE(YEAR(order_date) == 1995)) == 1)
).CALCULATE(
    customer_name=name,
    num_orders_1995=COUNT(orders.WHERE(YEAR(order_date) == 1995))
).ORDER_BY(num_orders_1995.DESC())
```

4. Explanation of how the code works
- `customers.WHERE(...)`: This filters the customers based on the specified conditions.
    - `(nation.region.name == ""EUROPE"")`: Filters customers from the ""EUROPE"" region.
    - `(acctbal > 700)`: Filters customers with an account balance greater than 700.
    - `(HAS(orders.WHERE(YEAR(order_date) == 1995)) == 1)`: Filters customers who have placed at least one order in 1995.
- `.CALCULATE(customer_name=name, num_orders_1995=COUNT(orders.WHERE(YEAR(order_date) == 1995)))`: This calculates the customer's name and the number of orders placed in 1995.
    - `customer_name=name`: Assigns the customer's name to the `customer_name` field.
    - `num_orders_1995=COUNT(orders.WHERE(YEAR(order_date) == 1995))`: Counts the number of orders placed in 1995 and assigns it to the `num_orders_1995` field.
- `.ORDER_BY(num_orders_1995.DESC())`: This sorts the results in descending order based on the `num_orders_1995` field.
```","customers_1995 = customers.WHERE(
    (nation.region.name == ""EUROPE"") &
    (acctbal > 700) &
    (HAS(orders.WHERE(YEAR(order_date) == 1995)) == 1)
).CALCULATE(
    customer_name=name,
    num_orders_1995=COUNT(orders.WHERE(YEAR(order_date) == 1995))
).ORDER_BY(num_orders_1995.DESC())",False,False,
6,"Find suppliers in each nation who have a total availqty of more than 1000 units of parts with 'BRASS' in their type. List the supplier name, nation name, and the sum of the parts supplied, sorted in descending order by parts supplied","SELECT s.s_name AS SupplierName, n.n_name AS Nation, SUM(ps.ps_availqty) AS TotalUnitsSupplied FROM supplier s JOIN nation n ON s.s_nationkey = n.n_nationkey JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey JOIN part p ON ps.ps_partkey = p.p_partkey WHERE p.p_type LIKE '%BRASS%' GROUP BY s.s_name, n.n_name HAVING SUM(ps.ps_availqty) > 1000 ORDER BY TotalUnitsSupplied DESC;",,,,,Expected object or value
7,Find parts names that are supplied by at least five different nations. Show the part name and the count of distinct nations that supply each part,"SELECT p.P_NAME AS PartName, COUNT(DISTINCT n.N_NAME) AS NumberOfNations FROM PART p JOIN PARTSUPP ps ON p.P_PARTKEY = ps.PS_PARTKEY JOIN SUPPLIER s ON ps.PS_SUPPKEY = s.S_SUPPKEY JOIN NATION n ON s.S_NATIONKEY = n.N_NATIONKEY GROUP BY p.P_NAME HAVING COUNT(DISTINCT n.N_NAME) > 5 ORDER BY NumberOfNations DESC;",,,,,Expected object or value
8,"Which 10 customers purchased the highest quantity of products with 'green' in the product name during 1998? Provide their names, adress and the total quantity ordered.","SELECT c_name AS customer_name, c_address AS customer_address, SUM(l_quantity) AS total_quantity_ordered FROM customer JOIN orders ON c_custkey = o_custkey JOIN lineitem ON o_orderkey = l_orderkey JOIN part ON l_partkey = p_partkey WHERE p_name LIKE '%green%' AND strftime('%Y', o_orderdate) = '1998' GROUP BY c_name, c_address ORDER BY total_quantity_ordered DESC LIMIT 10;",,,,,Expected object or value
