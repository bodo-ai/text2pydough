db_name,db_type,query_category,query,question,instructions,generated_query,reason,error_msg,exact_match,correct,error_query_gen,error_db_exec,timeout,latency_seconds,tokens_used,k_shot_prompt,glossary,table_metadata_string,table_aliases,prev_invalid_sql,prev_error_msg,question_0,query_0,question_1,query_1,cot_instructions,cot_pregen,cost_in_cents
academic,sqlite,group_by,"SELECT publication.year, AVG(publication.citation_num) AS average_citations FROM publication GROUP BY publication.year ORDER BY publication.year NULLS LAST;",What is the average number of citations received by publications in each year?,,"SELECT YEAR,
       AVG(citation_num) AS avg_citations
FROM publication
GROUP BY YEAR;",,,0,1,0,0,0,2.71,1073,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.17
academic,sqlite,group_by,"SELECT domain.name, AVG(publication.reference_num) AS average_references FROM domain_publication JOIN publication ON domain_publication.pid = publication.pid JOIN domain ON domain.did = domain_publication.did GROUP BY domain.name;SELECT domain.did, AVG(publication.reference_num) AS average_references FROM domain_publication JOIN publication ON domain_publication.pid = publication.pid JOIN domain ON domain.did = domain_publication.did GROUP BY domain.did;SELECT domain.name, domain.did, AVG(publication.reference_num) AS average_references FROM domain_publication JOIN publication ON domain_publication.pid = publication.pid JOIN domain ON domain.did = domain_publication.did GROUP BY domain.name, domain.did;",What is the average number of references cited by publications in each domain name?,,"SELECT d.name AS domain_name,
       AVG(p.reference_num) AS avg_references
FROM DOMAIN d
JOIN domain_publication dp ON d.did = dp.did
JOIN publication p ON dp.pid = p.pid
GROUP BY d.name;",,,0,1,0,0,0,2.99,1103,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.18
academic,sqlite,group_by,"SELECT author.name, SUM(publication.citation_num) AS total_citations FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid GROUP BY author.name ORDER BY total_citations DESC;SELECT author.aid, SUM(publication.citation_num) AS total_citations FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid GROUP BY author.aid ORDER BY total_citations DESC;SELECT author.name, author.aid, SUM(publication.citation_num) AS total_citations FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid GROUP BY author.name, author.aid ORDER BY total_citations DESC;SELECT a.aid, COUNT(c.cited) AS total_citations FROM author AS a JOIN writes AS w ON a.aid = w.aid JOIN publication AS p ON w.pid = p.pid JOIN cite AS c ON p.pid = c.cited GROUP BY a.aid ORDER BY total_citations DESC NULLS FIRST;SELECT a.name, COUNT(c.cited) AS total_citations FROM author AS a JOIN writes AS w ON a.aid = w.aid JOIN publication AS p ON w.pid = p.pid JOIN cite AS c ON p.pid = c.cited GROUP BY a.name ORDER BY total_citations DESC NULLS FIRST;SELECT a.aid, a.name, COUNT(c.cited) AS total_citations FROM author AS a JOIN writes AS w ON a.aid = w.aid JOIN publication AS p ON w.pid = p.pid JOIN cite AS c ON p.pid = c.cited GROUP BY a.aid, a.name ORDER BY total_citations DESC NULLS FIRST;",What is the total number of citations received by each author?,,"SELECT author.name,
       SUM(publication.citation_num) AS total_citations
FROM author
JOIN writes ON author.aid = writes.aid
JOIN publication ON writes.pid = publication.pid
GROUP BY author.aid;",,,0,1,0,0,0,5.93,1480,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.35
academic,sqlite,group_by,"SELECT publication.year, COUNT(DISTINCT publication.pid) AS total_publications FROM publication GROUP BY publication.year ORDER BY publication.year NULLS LAST;",What is the total number of publications published in each year?,,"SELECT YEAR,
       COUNT(*) AS total_publications
FROM publication
GROUP BY YEAR;",,,0,1,0,0,0,2.86,1004,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.14
academic,sqlite,group_by,"SELECT author.name FROM author WHERE author.aid IN (SELECT domain_author.aid FROM domain_author WHERE domain_author.did IN (SELECT domain.did FROM DOMAIN WHERE domain.name IN ('Machine Learning', 'Data Science')) GROUP BY 1 HAVING COUNT(DISTINCT domain_author.did) = 2);SELECT author.aid FROM author WHERE author.aid IN (SELECT domain_author.aid FROM domain_author WHERE domain_author.did IN (SELECT domain.did FROM DOMAIN WHERE domain.name IN ('Machine Learning', 'Data Science')) GROUP BY 1 HAVING COUNT(DISTINCT domain_author.did) = 2);SELECT author.name, author.aid FROM author WHERE author.aid IN (SELECT domain_author.aid FROM domain_author WHERE domain_author.did IN (SELECT domain.did FROM DOMAIN WHERE domain.name IN ('Machine Learning', 'Data Science')) GROUP BY 1 HAVING COUNT(DISTINCT domain_author.did) = 2);","Which authors have written publications in both the domain ""Machine Learning"" and the domain ""Data Science""?",,"SELECT DISTINCT a.name
FROM author a
WHERE EXISTS
    (SELECT 1
     FROM writes w
     JOIN domain_publication dp ON w.pid = dp.pid
     JOIN DOMAIN d ON dp.did = d.did
     WHERE w.aid = a.aid
       AND d.name = 'Machine Learning')
  AND EXISTS
    (SELECT 1
     FROM writes w
     JOIN domain_publication dp ON w.pid = dp.pid
     JOIN DOMAIN d ON dp.did = d.did
     WHERE w.aid = a.aid
       AND d.name = 'Data Science');",,,0,1,0,0,0,6.13,1566,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.39
academic,sqlite,instruct,SELECT DISTINCT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN domain_publication ON publication.pid = domain_publication.pid JOIN domain ON domain_publication.did = domain.did WHERE LOWER(domain.name) LIKE LOWER('%computer%science%');,"What are the names of the authors who have written publications in the domain ""Computer Science""?","
Follow the instructions below to generate the query:
To get publications written by authors from a given domain, you would need to join domain, domain_author, author to link the domain to the author first, and then join with write to link with the publication id.
You must also filter names using LIKE.
","SELECT DISTINCT author.name
FROM author
JOIN domain_author ON author.aid = domain_author.aid
JOIN DOMAIN ON domain_author.did = domain.did
JOIN writes ON author.aid = writes.aid
WHERE domain.name LIKE '%Computer Science%';",,,0,1,0,0,0,5.72,1488,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.33
academic,sqlite,instruct,"SELECT DISTINCT publication.title FROM DOMAIN JOIN domain_author ON domain.did = domain_author.did JOIN writes ON domain_author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN domain_conference ON domain.did = domain_conference.did WHERE LOWER(domain.name) LIKE LOWER('%Sociology%') AND publication.year = 2020 AND publication.cid = domain_conference.cid;SELECT DISTINCT publication.pid FROM DOMAIN JOIN domain_author ON domain.did = domain_author.did JOIN writes ON domain_author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN domain_conference ON domain.did = domain_conference.did WHERE LOWER(domain.name) LIKE LOWER('%Sociology%') AND publication.year = 2020 AND publication.cid = domain_conference.cid;SELECT DISTINCT publication.title, publication.pid FROM DOMAIN JOIN domain_author ON domain.did = domain_author.did JOIN writes ON domain_author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN domain_conference ON domain.did = domain_conference.did WHERE LOWER(domain.name) LIKE LOWER('%Sociology%') AND publication.year = 2020 AND publication.cid = domain_conference.cid;",What are the publications written by authors from the 'Sociology' domain and presented at conferences in the year 2020?,"
Follow the instructions below to generate the query:
To get publications written by authors from a given domain, you would need to join domain, domain_author, author to link the domain to the author first, and then join with write to link with the publication id.
Finally, to see which ones were presented at conferences, you must join the domain table with the domain_conference table.
You must also filter names using LIKE.
","SELECT DISTINCT p.*
FROM publication p
JOIN writes w ON p.pid = w.pid
JOIN author a ON w.aid = a.aid
JOIN domain_author da ON a.aid = da.aid
JOIN DOMAIN d ON da.did = d.did
JOIN domain_conference dc ON d.did = dc.did
JOIN conference c ON dc.cid = c.cid
AND p.cid = c.cid
WHERE d.name LIKE '%Sociology%'
  AND p.year = 2020;",,,0,1,0,0,0,9.26,1952,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.53
academic,sqlite,instruct,"SELECT DISTINCT name FROM author WHERE oid IS NULL;SELECT DISTINCT aid FROM author WHERE oid IS NULL;SELECT DISTINCT name, aid FROM author WHERE oid IS NULL;",Which authors are not part of any organization?,"
Follow the instructions below to generate the query:
Always filter names using LIKE
","SELECT a.name
FROM author AS a
LEFT JOIN
ORGANIZATION AS o ON a.oid = o.oid
WHERE o.oid IS NULL
  AND a.name LIKE '%';",,,0,1,0,0,0,3.55,1356,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.29
academic,sqlite,instruct,"SELECT DISTINCT a2.name FROM author AS a1 JOIN domain_author AS da1 ON a1.aid = da1.aid JOIN domain_author AS da2 ON da1.did = da2.did JOIN author AS a2 ON da2.aid = a2.aid WHERE LOWER(LOWER(a1.name)) LIKE LOWER('%martin%');SELECT DISTINCT a2.aid FROM author AS a1 JOIN domain_author AS da1 ON a1.aid = da1.aid JOIN domain_author AS da2 ON da1.did = da2.did JOIN author AS a2 ON da2.aid = a2.aid WHERE LOWER(LOWER(a1.name)) LIKE LOWER('%martin%');SELECT DISTINCT a2.name, a2.aid FROM author AS a1 JOIN domain_author AS da1 ON a1.aid = da1.aid JOIN domain_author AS da2 ON da1.did = da2.did JOIN author AS a2 ON da2.aid = a2.aid WHERE LOWER(LOWER(a1.name)) LIKE LOWER('%martin%');",Which authors belong to the same domain as Martin?,"
Follow the instructions below to generate the query:
Always filter names using LIKE with percent sign wildcards
","SELECT DISTINCT a.name
FROM author a
JOIN domain_author da ON a.aid = da.aid
WHERE da.did IN
    (SELECT da2.did
     FROM author a2
     JOIN domain_author da2 ON a2.aid = da2.aid
     WHERE a2.name LIKE '%Martin%');",,,0,1,0,0,0,7.27,1711,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.45
academic,sqlite,instruct,"SELECT DISTINCT organization.name FROM organization JOIN author ON organization.oid = author.oid JOIN writes ON author.aid = writes.aid JOIN domain_publication ON writes.pid = domain_publication.pid JOIN domain ON domain_publication.did = domain.did WHERE domain.name = 'Machine Learning';SELECT DISTINCT organization.oid FROM organization JOIN author ON organization.oid = author.oid JOIN writes ON author.aid = writes.aid JOIN domain_publication ON writes.pid = domain_publication.pid JOIN domain ON domain_publication.did = domain.did WHERE domain.name = 'Machine Learning';SELECT DISTINCT organization.name, organization.oid FROM organization JOIN author ON organization.oid = author.oid JOIN writes ON author.aid = writes.aid JOIN domain_publication ON writes.pid = domain_publication.pid JOIN domain ON domain_publication.did = domain.did WHERE domain.name = 'Machine Learning';","Which organizations have authors who have written publications in the domain ""Machine Learning""?","
Follow the instructions below to generate the query:
Always filter names using an exact match
","SELECT DISTINCT organization.name
FROM
ORGANIZATION
JOIN author ON organization.oid = author.oid
JOIN writes ON author.aid = writes.aid
JOIN publication ON writes.pid = publication.pid
JOIN domain_publication ON publication.pid = domain_publication.pid
JOIN DOMAIN ON domain_publication.did = domain.did
WHERE domain.name = 'Machine Learning';",,,0,1,0,0,0,5.34,1398,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.31
academic,sqlite,order_by,SELECT DISTINCT publication.title FROM publication ORDER BY publication.title ASC NULLS LAST;,What are the titles of all publications ordered alphabetically?,,"SELECT title
FROM publication
ORDER BY title ASC;",,,0,1,0,0,0,1.46,932,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.11
academic,sqlite,order_by,"SELECT publication.title, publication.citation_num FROM publication ORDER BY publication.citation_num DESC NULLS FIRST LIMIT 3;SELECT publication.pid, publication.citation_num FROM publication ORDER BY publication.citation_num DESC NULLS FIRST LIMIT 3;SELECT publication.title, publication.pid, publication.citation_num FROM publication ORDER BY publication.citation_num DESC NULLS FIRST LIMIT 3;",What are the top 3 publications with the highest number of citations?,,"SELECT pid,
       title,
       citation_num
FROM publication
ORDER BY citation_num DESC
LIMIT 3;",,,0,1,0,0,0,2.89,1138,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.20
academic,sqlite,order_by,SELECT publication.title FROM publication ORDER BY publication.reference_num DESC NULLS FIRST LIMIT 3;,"What are the top 3 titles of the publications that have the highest number of references cited, ordered by the number of references cited in descending order?",,"SELECT title
FROM publication
ORDER BY reference_num DESC
LIMIT 3;",,,0,1,0,0,0,2.79,1149,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.20
academic,sqlite,order_by,"SELECT d.name, COUNT(DISTINCT a.aid) AS author_count FROM author AS a JOIN domain_author AS da ON a.aid = da.aid JOIN domain AS d ON da.did = d.did GROUP BY d.name ORDER BY author_count DESC NULLS FIRST LIMIT 5;SELECT d.did, COUNT(DISTINCT a.aid) AS author_count FROM author AS a JOIN domain_author AS da ON a.aid = da.aid JOIN domain AS d ON da.did = d.did GROUP BY d.did ORDER BY author_count DESC NULLS FIRST LIMIT 5;SELECT d.name, d.did, COUNT(DISTINCT a.aid) AS author_count FROM author AS a JOIN domain_author AS da ON a.aid = da.aid JOIN domain AS d ON da.did = d.did GROUP BY d.name, d.did ORDER BY author_count DESC NULLS FIRST LIMIT 5;",What are the top 5 domains with the highest number of authors associated with them?,,"SELECT d.name,
       COUNT(DISTINCT da.aid) AS author_count
FROM DOMAIN AS d
JOIN domain_author AS da ON d.did = da.did
GROUP BY d.did
ORDER BY author_count DESC
LIMIT 5;",,,0,1,0,0,0,2.72,1232,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.24
academic,sqlite,order_by,SELECT publication.title FROM publication ORDER BY publication.citation_num DESC LIMIT 1;,What is the title of the publication that has received the highest number of citations?,,"SELECT title
FROM publication
ORDER BY citation_num DESC
LIMIT 1;",,,0,1,0,0,0,3.63,1070,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.17
academic,sqlite,ratio,"SELECT organization.continent, CAST(COUNT(DISTINCT author.aid) AS REAL) / NULLIF(COUNT(DISTINCT organization.oid), 0) AS ratio FROM organization LEFT JOIN author ON author.oid = organization.oid GROUP BY organization.continent ORDER BY ratio DESC;WITH author_counts AS (SELECT o.continent, COUNT(DISTINCT a.aid) AS author_count FROM author AS a JOIN organization AS o ON a.oid = o.oid GROUP BY o.continent), organization_counts AS (SELECT o.continent, COUNT(DISTINCT o.oid) AS organization_count FROM organization AS o GROUP BY o.continent) SELECT ac.continent, CAST(ac.author_count AS DOUBLE) / NULLIF(oc.organization_count, 0) AS author_to_organization_ratio FROM author_counts AS ac JOIN organization_counts AS oc ON ac.continent = oc.continent ORDER BY author_to_organization_ratio DESC;",How does the ratio of authors to organizations differ by continent?,,"SELECT o.continent,
       (COUNT(a.aid) * 1.0) / COUNT(o.oid) AS author_to_org_ratio
FROM
ORGANIZATION o
LEFT JOIN author a ON o.oid = a.oid
GROUP BY o.continent;",,INCORRECT RESULTS,0,0,0,0,0,8.06,1682,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.44
academic,sqlite,ratio,"SELECT publication.year, COUNT(DISTINCT publication.pid) AS num_publications, COUNT(DISTINCT publication.jid) AS num_journals, CAST(COUNT(DISTINCT publication.pid) AS REAL) / NULLIF(COUNT(DISTINCT publication.jid), 0) AS ratio FROM publication GROUP BY publication.year ORDER BY publication.year NULLS LAST;",How does the ratio of publications to journals change over the years? Return the annual numbers of publications and journals as well.,,"SELECT YEAR,
       COUNT(pid) AS publication_count,
       COUNT(DISTINCT jid) AS journal_count,
       CAST(COUNT(pid) AS REAL) / COUNT(DISTINCT jid) AS pub_to_journal_ratio
FROM publication
GROUP BY YEAR
ORDER BY YEAR;",,,0,1,0,0,0,3.73,1441,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.33
academic,sqlite,ratio,"SELECT CAST(COUNT(DISTINCT CASE WHEN NOT cid IS NULL THEN pid END) AS REAL) / NULLIF(COUNT(DISTINCT CASE WHEN NOT jid IS NULL THEN pid END), 0) AS ratio FROM publication;",What is the ratio of publications presented in conferences to publications published in journals?,,"SELECT
  (SELECT COUNT(*)
   FROM publication
   WHERE cid IS NOT NULL) * 1.0 /
  (SELECT COUNT(*)
   FROM publication
   WHERE jid IS NOT NULL) AS ratio;",,,0,1,0,0,0,4.41,1219,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.23
academic,sqlite,ratio,"SELECT CAST(COUNT(DISTINCT publication.pid) AS REAL) / NULLIF(COUNT(DISTINCT author.aid), 0) AS publication_to_author_ratio FROM publication, author;",What is the ratio of publications to authors in the database?,,"SELECT (1.0 *
          (SELECT COUNT(*)
           FROM publication)) /
  (SELECT COUNT(*)
   FROM author) AS publication_to_author_ratio;",,,0,1,0,0,0,3.72,1206,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.23
academic,sqlite,ratio,"SELECT domain_publication.did, CAST(COUNT(DISTINCT domain_publication.pid) AS REAL) / NULLIF(COUNT(DISTINCT domain_keyword.kid), 0) AS publication_to_keyword_ratio FROM domain_publication LEFT JOIN domain_keyword ON domain_publication.did = domain_keyword.did GROUP BY domain_publication.did ORDER BY publication_to_keyword_ratio DESC;SELECT domain_publication.did, CAST(COUNT(DISTINCT domain_publication.pid) AS REAL) / NULLIF(COUNT(DISTINCT domain_keyword.kid), 0) AS publication_to_keyword_ratio FROM domain_keyword LEFT JOIN domain_publication ON domain_publication.did = domain_keyword.did GROUP BY domain_publication.did ORDER BY publication_to_keyword_ratio DESC;SELECT d.did, COALESCE(CAST(COUNT(DISTINCT dp.pid) AS REAL) / NULLIF(COUNT(DISTINCT dk.kid), 0), 0) AS publication_to_keyword_ratio FROM domain AS d LEFT JOIN domain_publication AS dp ON d.did = dp.did LEFT JOIN domain_keyword AS dk ON d.did = dk.did GROUP BY d.did ORDER BY publication_to_keyword_ratio DESC;",What is the ratio of the total number of publications to the total number of keywords within each domain ID? Show all domain IDs.,,"SELECT d.did,
       CASE
           WHEN COUNT(DISTINCT dk.kid) = 0 THEN 0
           ELSE CAST(COUNT(DISTINCT dp.pid) AS FLOAT) / COUNT(DISTINCT dk.kid)
       END AS ratio
FROM DOMAIN d
LEFT JOIN domain_publication dp ON d.did = dp.did
LEFT JOIN domain_keyword dk ON d.did = dk.did
GROUP BY d.did;",,,0,1,0,0,0,7.87,1730,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.46
academic,sqlite,table_join,"SELECT conference.name, COUNT(publication.pid) AS num_publications FROM publication JOIN conference ON publication.cid = conference.cid GROUP BY conference.name, conference.cid ORDER BY num_publications DESC;","How many publications were presented at each conference, ordered by the number of publications in descending order? Give the names of the conferences and their corresponding number of publications.",,"SELECT conference.name,
       COUNT(publication.pid) AS num_publications
FROM conference
JOIN publication ON conference.cid = publication.cid
GROUP BY conference.name
ORDER BY num_publications DESC;",,,0,1,0,0,0,3.36,1237,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.24
academic,sqlite,table_join,SELECT COUNT(DISTINCT publication.pid) FROM publication JOIN journal ON publication.jid = journal.jid WHERE LOWER(journal.name) LIKE LOWER('J%');,"How many publications were published in journals whose names start with the letter ""J""?",,"SELECT COUNT(*)
FROM publication
JOIN journal ON publication.jid = journal.jid
WHERE journal.name LIKE 'J%';",,,0,1,0,0,0,3.03,1017,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.14
academic,sqlite,table_join,"SELECT journal.name, COUNT(publication.pid) AS total_publications FROM publication JOIN journal ON publication.jid = journal.jid GROUP BY journal.name ORDER BY total_publications DESC;SELECT journal.jid, COUNT(publication.pid) AS total_publications FROM publication JOIN journal ON publication.jid = journal.jid GROUP BY journal.jid ORDER BY total_publications DESC;SELECT journal.name, journal.jid, COUNT(publication.pid) AS total_publications FROM publication JOIN journal ON publication.jid = journal.jid GROUP BY journal.name, journal.jid ORDER BY total_publications DESC;SELECT journal.name, COUNT(publication.pid) AS total_publications FROM journal LEFT JOIN publication ON journal.jid = publication.jid GROUP BY journal.name ORDER BY total_publications DESC;SELECT journal.jid, COUNT(publication.pid) AS total_publications FROM journal LEFT JOIN publication ON journal.jid = publication.jid GROUP BY journal.jid ORDER BY total_publications DESC;SELECT journal.name, journal.jid, COUNT(publication.pid) AS total_publications FROM journal LEFT JOIN publication ON journal.jid = publication.jid GROUP BY journal.name, journal.jid ORDER BY total_publications DESC;","What is the total number of publications in each journal, ordered by the number of publications in descending order?",,"SELECT j.name AS journal_name,
       COUNT(p.pid) AS total_publications
FROM publication p
JOIN journal j ON p.jid = j.jid
GROUP BY j.name
ORDER BY total_publications DESC;",,,0,1,0,0,0,2.83,1168,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.21
academic,sqlite,table_join,"SELECT conference.name, COUNT(publication.pid) AS total_publications FROM publication JOIN conference ON publication.cid = conference.cid GROUP BY conference.name ORDER BY total_publications DESC NULLS FIRST;SELECT conference.cid, COUNT(publication.pid) AS total_publications FROM publication JOIN conference ON publication.cid = conference.cid GROUP BY conference.cid ORDER BY total_publications DESC NULLS FIRST;SELECT conference.name, conference.cid, COUNT(publication.pid) AS total_publications FROM publication JOIN conference ON publication.cid = conference.cid GROUP BY conference.name, conference.cid ORDER BY total_publications DESC NULLS FIRST;",What is the total number of publications presented in each conference?,,"SELECT conference.name,
       COUNT(publication.pid) AS total_publications
FROM conference
JOIN publication ON conference.cid = publication.cid
GROUP BY conference.cid;",,,0,1,0,0,0,3.36,1211,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.23
academic,sqlite,table_join,"SELECT author.name, COUNT(publication.pid) AS publication_count FROM writes JOIN author ON writes.aid = author.aid JOIN publication ON writes.pid = publication.pid WHERE publication.year = 2021 GROUP BY author.name ORDER BY publication_count DESC LIMIT 1;SELECT author.aid, COUNT(publication.pid) AS publication_count FROM writes JOIN author ON writes.aid = author.aid JOIN publication ON writes.pid = publication.pid WHERE publication.year = 2021 GROUP BY author.aid ORDER BY publication_count DESC LIMIT 1;SELECT author.name, author.aid, COUNT(publication.pid) AS publication_count FROM writes JOIN author ON writes.aid = author.aid JOIN publication ON writes.pid = publication.pid WHERE publication.year = 2021 GROUP BY author.name, author.aid ORDER BY publication_count DESC LIMIT 1;",Which author had the most publications in the year 2021 and how many publications did he/she have that year?,,"SELECT a.name,
       COUNT(*) AS publication_count
FROM publication p
JOIN writes w ON p.pid = w.pid
JOIN author a ON w.aid = a.aid
WHERE p.year = 2021
GROUP BY a.aid
ORDER BY publication_count DESC
LIMIT 1;",,,0,1,0,0,0,4.73,1186,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- author AS a
-- domain AS d
-- writes AS w
-- journal AS j
-- keyword AS k
-- conference AS co
-- publication AS p
-- organization AS o
-- domain_author AS da
-- domain_journal AS dj
-- domain_keyword AS dk
-- domain_conference AS dc
-- domain_publication AS dp
-- publication_keyword AS pk
",,,,,,,,False,0.22
advising,sqlite,date_functions,SELECT CAST((julianday('now') - max(julianday(s.admit_term))) AS INTEGER) AS days_since_admit FROM student AS s;,How long has it been in days since the last admitted student? Give the answer as an integer.,,"SELECT CAST(julianday('now') - julianday(MAX(admit_term)) AS INTEGER) AS days_since_last_admitted
FROM student;",,,0,1,0,0,0,2.95,2421,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.36
advising,sqlite,date_functions,"SELECT COUNT(*) AS num_students_graduated FROM student WHERE date(predicted_graduation_semester) >= date('now', '-10 years');",How many students were predicted to graduate in the last 10 years?,,"SELECT COUNT(*) AS num_students
FROM student
WHERE predicted_graduation_semester BETWEEN date('now', '-10 years') AND date('now');",,,0,1,0,0,0,5.18,2481,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.39
advising,sqlite,date_functions,SELECT DISTINCT co.course_id FROM course_offering AS co JOIN offering_instructor AS oi ON co.offering_id = oi.offering_id WHERE (co.semester = 1 OR co.semester = 2) AND co.end_time < '13:00:00' AND NOT co.thursday IS NULL;,Return the course id's that are offered in either semesters 1 or 2 and ends before 1pm and had an instructor on thursday,,"SELECT DISTINCT course_id
FROM course_offering
WHERE semester IN (1,
                   2)
  AND end_time < '13:00:00'
  AND thursday IS NOT NULL
  AND thursday <> '';",,,0,1,0,0,0,4.92,2702,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.48
advising,sqlite,date_functions,"SELECT strftime('%Y-%m', s.admit_term) AS month, COUNT(*) AS total_students FROM student AS s GROUP BY month ORDER BY total_students DESC LIMIT 1;SELECT strftime('%Y-%m-01', s.admit_term) AS month, COUNT(*) AS total_students FROM student AS s GROUP BY month ORDER BY total_students DESC LIMIT 1;",What month were most students admitted? Return the no. of students and the month as a date,,"SELECT date(strftime('%Y-%m-01', admit_term)) AS MONTH,
       COUNT(*) AS num_students
FROM student
GROUP BY strftime('%Y-%m-01', admit_term)
ORDER BY num_students DESC
LIMIT 1;",,,0,1,0,0,0,3.61,2506,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.40
advising,sqlite,date_functions,SELECT AVG(julianday(s.predicted_graduation_semester) - julianday(s.admit_term)) AS average_days_to_graduation FROM student AS s;,What's the average predicted time to graduation since admission in no. of days?,,"SELECT AVG(julianday(predicted_graduation_semester) - julianday(admit_term)) AS avg_days_to_graduation
FROM student;",,,0,1,0,0,0,3.66,2490,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.40
advising,sqlite,group_by,"SELECT course_offering.has_final_exam, COUNT(offering_id) AS num_courses FROM course_offering GROUP BY course_offering.has_final_exam;SELECT COUNT(CASE WHEN co.has_final_exam THEN 1 END) AS num_with_final_exam, COUNT(CASE WHEN NOT co.has_final_exam THEN 1 END) AS num_without_final_exam FROM course_offering AS co;",How many course offerings have a final exam and how many do not?,,"SELECT SUM(CASE
               WHEN has_final_exam = 1 THEN 1
               ELSE 0
           END) AS with_final_exam,
       SUM(CASE
               WHEN has_final_exam = 0 THEN 1
               ELSE 0
           END) AS without_final_exam
FROM course_offering;",,,0,1,0,0,0,2.84,2377,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.35
advising,sqlite,group_by,"SELECT course_offering.semester, COUNT(DISTINCT course_offering.course_id) AS num_courses FROM course_offering GROUP BY course_offering.semester ORDER BY course_offering.semester NULLS LAST;SELECT semester.semester_id, COUNT(DISTINCT course_offering.course_id) AS num_courses FROM semester LEFT JOIN course_offering ON semester.semester_id = course_offering.semester GROUP BY semester.semester_id;",How many courses are offered for each semester id?,,"SELECT semester AS semester_id,
       COUNT(DISTINCT course_id) AS num_courses
FROM course_offering
GROUP BY semester;",,,0,1,0,0,0,3.17,2408,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.36
advising,sqlite,group_by,"SELECT course.department, COUNT(DISTINCT course.course_id) AS num_courses FROM course GROUP BY course.department ORDER BY num_courses DESC;",How many courses does each department offer?,,"SELECT department,
       COUNT(course_id) AS course_count
FROM course
GROUP BY department;",,,0,1,0,0,0,3.53,2206,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.27
advising,sqlite,group_by,"SELECT i.name, AVG(c.clarity_score) FROM course AS c JOIN course_offering AS co ON c.course_id = co.course_id JOIN offering_instructor AS oi ON co.offering_id = oi.offering_id JOIN instructor AS i ON oi.instructor_id = i.instructor_id GROUP BY i.name;SELECT i.instructor_id, AVG(c.clarity_score) FROM course AS c JOIN course_offering AS co ON c.course_id = co.course_id JOIN offering_instructor AS oi ON co.offering_id = oi.offering_id JOIN instructor AS i ON oi.instructor_id = i.instructor_id GROUP BY i.instructor_id;SELECT i.name, i.instructor_id, AVG(c.clarity_score) FROM course AS c JOIN course_offering AS co ON c.course_id = co.course_id JOIN offering_instructor AS oi ON co.offering_id = oi.offering_id JOIN instructor AS i ON oi.instructor_id = i.instructor_id GROUP BY i.name, i.instructor_id;",What is the average clarity score for each instructor who taught a course?,,"SELECT i.name,
       AVG(c.clarity_score) AS avg_clarity
FROM course c
JOIN course_offering co ON c.course_id = co.course_id
JOIN offering_instructor oi ON co.offering_id = oi.offering_id
JOIN instructor i ON oi.instructor_id = i.instructor_id
GROUP BY i.instructor_id,
         i.name;",,,0,1,0,0,0,5.50,2523,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.41
advising,sqlite,group_by,"SELECT course_tags_count.course_id, SUM(course_tags_count.hilarious) AS total_hilarious FROM course_tags_count GROUP BY course_tags_count.course_id;",What is the total number of students who found the instructor to be hilarious per course id?,,"SELECT course_id,
       SUM(hilarious) AS total_hilarious_students
FROM course_tags_count
GROUP BY course_id;",,,0,1,0,0,0,4.05,2480,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.39
advising,sqlite,instruct,"SELECT DISTINCT student_id FROM student_record WHERE student_record.how = 'in-person' AND student_record.grade IN ('A', 'C');",Return the student IDs who have taken an in-person course and have gotten a grade of A or C.,"
Follow the instructions below to generate the query:
Always filter strings with an exact match.
When asked for specific students or courses, do not return duplicates.
","SELECT DISTINCT student_id
FROM student_record
WHERE how = 'in-person'
  AND (grade = 'A'
       OR grade = 'C');",,,0,1,0,0,0,3.70,2389,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.34
advising,sqlite,instruct,"SELECT course.name, course.easiness_score FROM course WHERE course.department = 'Computer Science';SELECT course.course_id, course.easiness_score FROM course WHERE course.department = 'Computer Science';SELECT course.number, course.easiness_score FROM course WHERE course.department = 'Computer Science';SELECT course.name, course.course_id, course.easiness_score FROM course WHERE course.department = 'Computer Science';SELECT course.name, course.number, course.easiness_score FROM course WHERE course.department = 'Computer Science';SELECT course.course_id, course.number, course.easiness_score FROM course WHERE course.department = 'Computer Science';SELECT course.name, course.course_id, course.number, course.easiness_score FROM course WHERE course.department = 'Computer Science';","What are the easiness scores for courses in the ""Computer Science"" department? Show both courses and scores.","
Follow the instructions below to generate the query:
Always filter names using exact string matching
","SELECT name,
       easiness_score
FROM course
WHERE department = 'Computer Science';",,,0,1,0,0,0,2.96,2300,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.30
advising,sqlite,instruct,SELECT course.name FROM course WHERE LOWER(course.department) LIKE LOWER('%Computer Science%') ORDER BY course.name ASC NULLS LAST;,What are the names of all the courses offered by the department of Computer Science?,"
Follow the instructions below to generate the query:
Filter strings using LIKE.
Use the student_record table for all information relating to students' choices and their course.
","SELECT DISTINCT c.name
FROM student_record AS sr
JOIN course AS c ON sr.course_id = c.course_id
WHERE c.department LIKE '%Computer Science%';",,,0,1,0,0,0,3.57,2580,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.42
advising,sqlite,instruct,SELECT AVG(student.total_gpa) FROM student JOIN program ON student.program_id = program.program_id WHERE LOWER(program.name) = 'mathematics';,What is the average GPA of students in the program mathematics?,"
Follow the instructions below to generate the query:
Match strings case-insensitively
","SELECT AVG(s.total_gpa) AS average_gpa
FROM student s
JOIN program p ON s.program_id = p.program_id
WHERE p.name = 'mathematics' COLLATE NOCASE;",,,0,1,0,0,0,3.93,2443,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.37
advising,sqlite,instruct,"SELECT student.firstname, student.lastname FROM student WHERE NOT student.minor IS NULL ORDER BY student.lastname NULLS LAST;",Which students have declared a minor program? List their firstname and lastname. Order the results by the students' last names.,"
Follow the instructions below to generate the query:
student.declare_major is null for students who have not declared their major.
student.minor is null for students who have not declared a minor program.
","SELECT firstname,
       lastname
FROM student
WHERE minor IS NOT NULL
ORDER BY lastname;",,,0,1,0,0,0,4.15,2389,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.34
advising,sqlite,order_by,"SELECT instructor.name, COUNT(offering_instructor.offering_id) AS num_courses FROM offering_instructor JOIN instructor ON offering_instructor.instructor_id = instructor.instructor_id GROUP BY instructor.name ORDER BY num_courses DESC NULLS FIRST LIMIT 1;","What is the name of the instructor who has taught the most courses, and how many courses have they taught?",,"SELECT i.name,
       COUNT(*) AS courses_taught
FROM offering_instructor oi
JOIN instructor i ON oi.instructor_id = i.instructor_id
GROUP BY i.instructor_id
ORDER BY courses_taught DESC
LIMIT 1;",,,0,1,0,0,0,8.36,2699,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.49
advising,sqlite,order_by,"SELECT student.student_id, student.total_credit FROM student ORDER BY student.total_credit DESC;","What is the total number of credits earned by each student, ordered from highest to lowest? Give the student id and the total number of credits.",,"SELECT student_id,
       total_credit
FROM student
ORDER BY total_credit DESC;",,,0,1,0,0,0,8.80,3569,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.87
advising,sqlite,order_by,"SELECT course.course_id, SUM(course.num_enrolled) AS total_students FROM course GROUP BY course.course_id ORDER BY total_students DESC;SELECT course.name, SUM(course.num_enrolled) AS total_students FROM course GROUP BY course.name ORDER BY total_students DESC;SELECT course.number, SUM(course.num_enrolled) AS total_students FROM course GROUP BY course.number ORDER BY total_students DESC;SELECT course.course_id, course.name, SUM(course.num_enrolled) AS total_students FROM course GROUP BY course.course_id, course.name ORDER BY total_students DESC;SELECT course.course_id, course.number, SUM(course.num_enrolled) AS total_students FROM course GROUP BY course.course_id, course.number ORDER BY total_students DESC;SELECT course.name, course.number, SUM(course.num_enrolled) AS total_students FROM course GROUP BY course.name, course.number ORDER BY total_students DESC;SELECT course.course_id, course.name, course.number, SUM(course.num_enrolled) AS total_students FROM course GROUP BY course.course_id, course.name, course.number ORDER BY total_students DESC;","What is the total number of students enrolled in each course, ordered from highest to lowest?",,"SELECT name,
       num_enrolled
FROM course
ORDER BY num_enrolled DESC;",,,0,1,0,0,0,4.79,2663,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.47
advising,sqlite,order_by,"SELECT course_tags_count.course_id, course_tags_count.participation FROM course_tags_count ORDER BY course_tags_count.participation DESC;","What is the total number of students who participated actively for each course id, ordered from highest to lowest participants?",,"SELECT course_id,
       participation AS total_active_students
FROM course_tags_count
ORDER BY participation DESC;",,,0,1,0,0,0,4.50,2546,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.42
advising,sqlite,order_by,"SELECT course.name, course.num_enrolled FROM course ORDER BY course.num_enrolled DESC LIMIT 1;SELECT course.course_id, course.num_enrolled FROM course ORDER BY course.num_enrolled DESC LIMIT 1;SELECT course.number, course.num_enrolled FROM course ORDER BY course.num_enrolled DESC LIMIT 1;SELECT course.name, course.course_id, course.num_enrolled FROM course ORDER BY course.num_enrolled DESC LIMIT 1;SELECT course.name, course.number, course.num_enrolled FROM course ORDER BY course.num_enrolled DESC LIMIT 1;SELECT course.course_id, course.number, course.num_enrolled FROM course ORDER BY course.num_enrolled DESC LIMIT 1;SELECT course.name, course.course_id, course.number, course.num_enrolled FROM course ORDER BY course.num_enrolled DESC LIMIT 1;","Which course has the highest number of enrolled students, and what is the enrollment number?",,"SELECT name,
       num_enrolled
FROM course
ORDER BY num_enrolled DESC
LIMIT 1;",,,0,1,0,0,0,3.08,2282,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.30
advising,sqlite,ratio,"SELECT course.course_id, CAST(course.num_enrolled AS REAL) / NULLIF(course.num_reviews, 0) AS student_review_ratio FROM course ORDER BY student_review_ratio NULLS LAST;SELECT course.name, CAST(course.num_enrolled AS REAL) / NULLIF(course.num_reviews, 0) AS student_review_ratio FROM course ORDER BY student_review_ratio NULLS LAST;SELECT course.number, CAST(course.num_enrolled AS REAL) / NULLIF(course.num_reviews, 0) AS student_review_ratio FROM course ORDER BY student_review_ratio NULLS LAST;SELECT course.course_id, course.name, CAST(course.num_enrolled AS REAL) / NULLIF(course.num_reviews, 0) AS student_review_ratio FROM course ORDER BY student_review_ratio NULLS LAST;SELECT course.course_id, course.number, CAST(course.num_enrolled AS REAL) / NULLIF(course.num_reviews, 0) AS student_review_ratio FROM course ORDER BY student_review_ratio NULLS LAST;SELECT course.name, course.number, CAST(course.num_enrolled AS REAL) / NULLIF(course.num_reviews, 0) AS student_review_ratio FROM course ORDER BY student_review_ratio NULLS LAST;SELECT course.course_id, course.name, course.number, CAST(course.num_enrolled AS REAL) / NULLIF(course.num_reviews, 0) AS student_review_ratio FROM course ORDER BY student_review_ratio NULLS LAST;",How does the ratio of enrolled students to the number of reviews vary across different courses?,,"SELECT name AS course_name,
       CASE
           WHEN num_reviews = 0 THEN NULL
           ELSE CAST(num_enrolled AS FLOAT) / num_reviews
       END AS enrollment_to_review_ratio
FROM course;",,,0,1,0,0,0,4.57,2498,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.40
advising,sqlite,ratio,"SELECT course.course_id, CAST(course.helpfulness_score AS REAL) / NULLIF(course.clarity_score, 0) AS ratio FROM course;",What is the ratio of helpfulness scores to clarity scores for each course ID?,,"SELECT course_id,
       CAST(helpfulness_score AS FLOAT) / clarity_score AS ratio
FROM course;",,,0,1,0,0,0,4.18,2344,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.33
advising,sqlite,ratio,"SELECT course_offering.semester, CAST(SUM(CASE WHEN course.has_projects THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN course.has_exams THEN 1 ELSE 0 END), 0) AS ratio FROM course JOIN course_offering ON course.course_id = course_offering.course_id GROUP BY course_offering.semester ORDER BY course_offering.semester NULLS LAST;",What is the ratio of the number of courses with projects to the number of courses with exams in each semester id?,,"SELECT co.semester AS semester_id,
       CAST(COUNT(DISTINCT CASE
                               WHEN c.has_projects = 1 THEN c.course_id
                           END) AS FLOAT) / NULLIF(COUNT(DISTINCT CASE
                                                                      WHEN c.has_exams = 1 THEN c.course_id
                                                                  END), 0) AS ratio
FROM course_offering co
JOIN course c ON co.course_id = c.course_id
GROUP BY co.semester;",,,0,1,0,0,0,8.63,3123,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.67
advising,sqlite,ratio,"SELECT course_tags_count.course_id, CAST(course_tags_count.clear_grading AS REAL) / NULLIF(course_tags_count.good_feedback, 0) AS ratio FROM course_tags_count ORDER BY course_tags_count.course_id NULLS LAST;",What is the ratio of the number of students who found the grading criteria clear and easy to understand to the number of students who received good feedback from the instructor for each course id?,,"SELECT course_id,
       CAST(clear_grading AS FLOAT) / NULLIF(good_feedback, 0) AS ratio
FROM course_tags_count;",,,0,1,0,0,0,3.78,2441,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.37
advising,sqlite,ratio,SELECT CAST(SUM(CASE WHEN c.has_exams THEN c.num_enrolled ELSE 0 END) AS REAL) / SUM(CASE WHEN NOT c.has_exams THEN c.num_enrolled ELSE 0 END) AS ratio FROM course AS c;,What is the ratio of the total number of students enrolled in courses with exams to the total number of students enrolled in courses without exams?,,"SELECT (SUM(CASE
                WHEN has_exams = 1 THEN num_enrolled
                ELSE 0
            END) * 1.0) / NULLIF(SUM(CASE
                                         WHEN has_exams = 0 THEN num_enrolled
                                         ELSE 0
                                     END), 0) AS ratio
FROM course;",,,0,1,0,0,0,4.30,2718,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.49
advising,sqlite,table_join,"SELECT program.name, COUNT(student.student_id) AS number_of_students FROM student JOIN program ON student.program_id = program.program_id WHERE NOT student.declare_major IS NULL GROUP BY program.name ORDER BY number_of_students DESC NULLS FIRST;SELECT program.program_id, COUNT(student.student_id) AS number_of_students FROM student JOIN program ON student.program_id = program.program_id WHERE NOT student.declare_major IS NULL GROUP BY program.program_id ORDER BY number_of_students DESC NULLS FIRST;SELECT program.name, program.program_id, COUNT(student.student_id) AS number_of_students FROM student JOIN program ON student.program_id = program.program_id WHERE NOT student.declare_major IS NULL GROUP BY program.name, program.program_id ORDER BY number_of_students DESC NULLS FIRST;",How many students have declared a major in each program?,,"SELECT p.name AS program,
       COUNT(s.student_id) AS student_count
FROM program p
LEFT JOIN student s ON p.name = s.declare_major
GROUP BY p.name;",,,0,1,0,0,0,8.70,3127,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.68
advising,sqlite,table_join,"SELECT program.name, SUM(student.total_credit) AS total_credits FROM student JOIN program ON student.program_id = program.program_id GROUP BY program.name;SELECT program.program_id, SUM(student.total_credit) AS total_credits FROM student JOIN program ON student.program_id = program.program_id GROUP BY program.program_id;SELECT program.name, program.program_id, SUM(student.total_credit) AS total_credits FROM student JOIN program ON student.program_id = program.program_id GROUP BY program.name, program.program_id;",What is the total number of credits earned by students in each program?,,"SELECT program.name AS program_name,
       SUM(student.total_credit) AS total_credits
FROM student
JOIN program ON student.program_id = program.program_id
GROUP BY program.program_id;",,,0,1,0,0,0,2.52,2298,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.31
advising,sqlite,table_join,SELECT COUNT(DISTINCT student_record.student_id) AS total_students FROM student_record JOIN course_offering ON student_record.course_id = course_offering.course_id WHERE course_offering.has_final_project = TRUE OR course_offering.has_final_exam = TRUE;,What is the total number of students who have taken a course with a final project or exam?,,"SELECT COUNT(DISTINCT sr.student_id) AS total_students
FROM student_record sr
JOIN course_offering co ON sr.offering_id = co.offering_id
WHERE co.has_final_project = 1
  OR co.has_final_exam = 1;",,,0,1,0,0,0,5.69,2506,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.40
advising,sqlite,table_join,"SELECT DISTINCT course.name FROM course_offering JOIN course ON course_offering.course_id = course.course_id WHERE course_offering.has_final_project = TRUE AND course_offering.has_final_exam = TRUE;SELECT DISTINCT course.course_id FROM course_offering JOIN course ON course_offering.course_id = course.course_id WHERE course_offering.has_final_project = TRUE AND course_offering.has_final_exam = TRUE;SELECT DISTINCT course.number FROM course_offering JOIN course ON course_offering.course_id = course.course_id WHERE course_offering.has_final_project = TRUE AND course_offering.has_final_exam = TRUE;SELECT DISTINCT course.name, course.course_id FROM course_offering JOIN course ON course_offering.course_id = course.course_id WHERE course_offering.has_final_project = TRUE AND course_offering.has_final_exam = TRUE;SELECT DISTINCT course.name, course.number FROM course_offering JOIN course ON course_offering.course_id = course.course_id WHERE course_offering.has_final_project = TRUE AND course_offering.has_final_exam = TRUE;SELECT DISTINCT course.course_id, course.number FROM course_offering JOIN course ON course_offering.course_id = course.course_id WHERE course_offering.has_final_project = TRUE AND course_offering.has_final_exam = TRUE;SELECT DISTINCT course.name, course.course_id, course.number FROM course_offering JOIN course ON course_offering.course_id = course.course_id WHERE course_offering.has_final_project = TRUE AND course_offering.has_final_exam = TRUE;",Which courses have a final project and a final exam?,,"SELECT DISTINCT c.course_id,
                c.name
FROM course c
JOIN course_offering co ON c.course_id = co.course_id
WHERE co.has_final_project = 1
  AND co.has_final_exam = 1;",,,0,1,0,0,0,3.01,2429,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.37
advising,sqlite,table_join,"SELECT DISTINCT course.name AS course_name FROM student JOIN student_record ON student.student_id = student_record.student_id JOIN program ON student.program_id = program.program_id JOIN course ON student_record.course_id = course.course_id WHERE LOWER(program.name) LIKE LOWER('%Computer Science%');SELECT DISTINCT course.course_id AS course_name FROM student JOIN student_record ON student.student_id = student_record.student_id JOIN program ON student.program_id = program.program_id JOIN course ON student_record.course_id = course.course_id WHERE LOWER(program.name) LIKE LOWER('%Computer Science%');SELECT DISTINCT course.number AS course_name FROM student JOIN student_record ON student.student_id = student_record.student_id JOIN program ON student.program_id = program.program_id JOIN course ON student_record.course_id = course.course_id WHERE LOWER(program.name) LIKE LOWER('%Computer Science%');SELECT DISTINCT course.name, course.course_id AS course_name FROM student JOIN student_record ON student.student_id = student_record.student_id JOIN program ON student.program_id = program.program_id JOIN course ON student_record.course_id = course.course_id WHERE LOWER(program.name) LIKE LOWER('%Computer Science%');SELECT DISTINCT course.name, course.number AS course_name FROM student JOIN student_record ON student.student_id = student_record.student_id JOIN program ON student.program_id = program.program_id JOIN course ON student_record.course_id = course.course_id WHERE LOWER(program.name) LIKE LOWER('%Computer Science%');SELECT DISTINCT course.course_id, course.number AS course_name FROM student JOIN student_record ON student.student_id = student_record.student_id JOIN program ON student.program_id = program.program_id JOIN course ON student_record.course_id = course.course_id WHERE LOWER(program.name) LIKE LOWER('%Computer Science%');SELECT DISTINCT course.name, course.course_id, course.number AS course_name FROM student JOIN student_record ON student.student_id = student_record.student_id JOIN program ON student.program_id = program.program_id JOIN course ON student_record.course_id = course.course_id WHERE LOWER(program.name) LIKE LOWER('%Computer Science%');",Which courses have been taken by students in the Computer Science program?,,"SELECT DISTINCT c.course_id,
                c.name
FROM course AS c
JOIN student_record AS sr ON c.course_id = sr.course_id
JOIN student AS s ON sr.student_id = s.student_id
JOIN program AS p ON s.program_id = p.program_id
WHERE p.name = 'Computer Science';",,,0,1,0,0,0,3.58,2447,,,,"Use the following table aliases when referencing tables in the query:
-- area AS a
-- course AS c
-- program AS p
-- student AS s
-- semester AS se
-- instructor AS i
-- program_course AS pc
-- student_record AS sr
-- course_offering AS co
-- course_tags_count AS ctc
-- comment_instructor AS ci
-- course_prerequisite AS cp
-- offering_instructor AS oi
-- program_requirement AS pr
",,,,,,,,False,0.38
atis,sqlite,date_functions,"SELECT month.month_name, COUNT(*) AS departure_count FROM flight JOIN month ON CAST(strftime('%m', datetime(flight.departure_time, 'unixepoch')) AS INTEGER) = month.month_number GROUP BY month.month_name ORDER BY month.month_number;SELECT strftime('%m', datetime(flight.departure_time, 'unixepoch')) AS month, COUNT(*) AS num_departures FROM flight GROUP BY month ORDER BY month;SELECT strftime('%Y-%m', datetime(flight.departure_time, 'unixepoch')) AS month, COUNT(*) AS num_departures FROM flight GROUP BY month ORDER BY month;SELECT strftime('%Y-%m-01', datetime(flight.departure_time, 'unixepoch')) AS month, COUNT(*) AS num_departures FROM flight GROUP BY month ORDER BY month;",Count the number of flight departures for each month?,,"SELECT m.month_name,
       COUNT(*) AS departure_count
FROM flight f
JOIN MONTH m ON m.month_number = CAST(strftime('%m', datetime(f.departure_time, 'unixepoch')) AS INTEGER)
GROUP BY m.month_number
ORDER BY m.month_number;",,,0,1,0,0,0,5.18,3448,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.53
atis,sqlite,date_functions,"SELECT CAST(julianday('now') - julianday(datetime(departure_time, 'unixepoch')) AS INTEGER) AS difference_in_days FROM flight ORDER BY departure_time ASC LIMIT 1;SELECT CAST((julianday('now') - julianday(datetime(MIN(f.departure_time), 'unixepoch'))) AS INTEGER) AS days_difference FROM flight AS f;",What's the absolute difference in time in days between today and the earliest flight departure? Give the answer as an integer.,,"SELECT CAST(ABS((strftime('%s', 'now') - MIN(departure_time)) / 86400) AS INTEGER) AS day_difference
FROM flight;",,,0,1,0,0,0,5.42,3440,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.52
atis,sqlite,date_functions,"SELECT AVG((strftime('%s', datetime(arrival_time, 'unixepoch')) - strftime('%s', datetime(departure_time, 'unixepoch')) - (34 * 60)) / 60.0) AS average_duration FROM flight;SELECT AVG(arrival_time - departure_time) / 60 - 34 AS average_duration FROM flight;","What's the average duration between departure and arrival times minus 34 minutes? Convert from UNIX to regular datetime, and return the answer in minutes",,"SELECT AVG(((arrival_time - departure_time) / 60.0) - 34) AS avg_adjusted_duration
FROM flight;",,,0,1,0,0,0,6.61,3694,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.63
atis,sqlite,date_functions,"SELECT STRFTIME('%H:%M', datetime(departure_time, 'unixepoch')) AS earliest_departure_time FROM flight ORDER BY departure_time ASC LIMIT 1;",What's the earliest flight departure time in the day in HH:MM?,,"SELECT strftime('%H:%M', MIN(departure_time), 'unixepoch') AS earliest_departure
FROM flight;",,,0,1,0,0,0,3.02,3167,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.40
atis,sqlite,date_functions,"SELECT flight.flight_number, (arrival_time - departure_time) / 60 AS duration_minutes FROM flight ORDER BY duration_minutes NULLS LAST LIMIT 1;SELECT flight.flight_id, (arrival_time - departure_time) / 60 AS duration_minutes FROM flight ORDER BY duration_minutes NULLS LAST LIMIT 1;SELECT flight.flight_number, flight.flight_id, (arrival_time - departure_time) / 60 AS duration_minutes FROM flight ORDER BY duration_minutes NULLS LAST LIMIT 1;",Which flight has the shortest duration between departure and arrival times? Convert to integer minutes.,,"SELECT flight_id,
       flight_number,
       CAST((arrival_time - departure_time) / 60 AS INTEGER) AS duration_minutes
FROM flight
ORDER BY (arrival_time - departure_time) ASC
LIMIT 1;",,,0,1,0,0,0,4.86,3381,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.50
atis,sqlite,group_by,"SELECT airport.airport_code, COUNT(flight.from_airport) AS num_departures FROM airport LEFT JOIN flight ON airport.airport_code = flight.from_airport AND flight.connections = 0 GROUP BY airport.airport_code;SELECT airport.airport_code, COUNT(flight.from_airport) AS num_departures FROM airport JOIN flight ON airport.airport_code = flight.from_airport WHERE flight.connections = 0 GROUP BY airport.airport_code;","How many flights depart from each airport code, excluding departures with connections?",,"SELECT from_airport,
       COUNT(*) AS flight_count
FROM flight
WHERE connections = 0
GROUP BY from_airport;",,,0,1,0,0,0,4.17,3363,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.49
atis,sqlite,group_by,"SELECT food_service.compartment, COUNT(food_service.meal_number) AS number_of_meals FROM food_service GROUP BY food_service.compartment ORDER BY number_of_meals DESC;","How many meals are served in each compartment, sorted by the number of meals in descending order?",,"SELECT compartment,
       COUNT(*) AS meal_count
FROM food_service
GROUP BY compartment
ORDER BY meal_count DESC;",,,0,1,0,0,0,2.67,3105,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.37
atis,sqlite,group_by,"SELECT f.from_airport, f.to_airport, AVG(f.one_direction_cost) AS average_cost FROM fare AS f GROUP BY f.from_airport, f.to_airport ORDER BY f.from_airport NULLS LAST, f.to_airport NULLS LAST;",What is the average cost of a one-way trip for each airport pair in the fare table?,,"SELECT from_airport,
       to_airport,
       AVG(one_direction_cost) AS average_cost
FROM fare
GROUP BY from_airport,
         to_airport;",,,0,1,0,0,0,3.41,3247,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.44
atis,sqlite,group_by,"SELECT fare.fare_airline, AVG(fare.round_trip_cost) AS average_cost FROM fare WHERE fare.from_airport = 'LAX' AND fare.to_airport = 'ORD' GROUP BY fare.fare_airline ORDER BY average_cost DESC;SELECT airline.airline_name, AVG(fare.round_trip_cost) AS avg_round_trip_cost FROM fare JOIN airline ON fare.fare_airline = airline.airline_code WHERE fare.from_airport = 'LAX' AND fare.to_airport = 'ORD' GROUP BY airline.airline_name ORDER BY avg_round_trip_cost DESC NULLS FIRST;","What is the average cost of round-trip fares from Los Angeles (LAX) to Chicago (ORD) for each airline, sorted in descending order by average cost?",,"SELECT fare_airline,
       AVG(round_trip_cost) AS average_cost
FROM fare
WHERE from_airport = 'LAX'
  AND to_airport = 'ORD'
GROUP BY fare_airline
ORDER BY average_cost DESC;",,,0,1,0,0,0,5.39,3398,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.50
atis,sqlite,group_by,"SELECT fare.fare_airline, SUM(fare.round_trip_cost) AS total_round_trip_cost FROM fare GROUP BY fare.fare_airline ORDER BY total_round_trip_cost DESC NULLS FIRST;",What is the total cost of round-trip fares for each airline code?,,"SELECT fare_airline AS airline_code,
       SUM(round_trip_cost) AS total_round_trip_cost
FROM fare
WHERE round_trip_required = 'Yes'
GROUP BY fare_airline;",,INCORRECT RESULTS,0,0,0,0,0,5.36,3498,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.55
atis,sqlite,instruct,SELECT COUNT(DISTINCT flight_fare.flight_id) FROM flight_fare JOIN fare ON flight_fare.fare_id = fare.fare_id WHERE fare.round_trip_required = 'Yes';,How many flights require a round-trip to purchase the fare?,"
Follow the instructions below to generate the query:
Filter airport, city, country names using LIKE.
Filter state code (eg NY) and airport codes (eg JFK) using upper-case matches.
","SELECT COUNT(DISTINCT flight.flight_id) AS flight_count
FROM flight
JOIN flight_fare ON flight.flight_id = flight_fare.flight_id
JOIN fare ON flight_fare.fare_id = fare.fare_id
WHERE fare.round_trip_required = 'Yes';",,,0,1,0,0,0,3.97,3488,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.53
atis,sqlite,instruct,SELECT minimum_connect_time FROM airport WHERE airport_code = 'JFK';,What is the minimum amount of time required for a connecting flight at JFK Airport?,"
Follow the instructions below to generate the query:
Filter airport, city, country names using LIKE.
Filter state code (eg NY) and airport codes (eg JFK) using upper-case matches.
","SELECT minimum_connect_time
FROM airport
WHERE airport_code = 'JFK';",,,0,1,0,0,0,4.64,3389,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.49
atis,sqlite,instruct,SELECT SUM(fare.round_trip_cost) AS total_round_trip_cost FROM fare WHERE fare.from_airport = 'JFK' AND fare.to_airport = 'LAX';,What is the total cost of all round-trip fares from New York (JFK) to Los Angeles?,"
Follow the instructions below to generate the query:
Filter airport, city, country names using LIKE.
Filter state code (eg NY), airport codes (eg JFK) using case-insensitive matches.
fare.round_trip_required is not needed when getting the round trip cost.
","SELECT SUM(round_trip_cost) AS total_cost
FROM fare
WHERE from_airport LIKE '%JFK%' COLLATE NOCASE
  AND to_airport LIKE '%LAX%' COLLATE NOCASE;",,,0,1,0,0,0,12.54,4394,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.92
atis,sqlite,instruct,"SELECT flight.flight_number FROM flight WHERE LOWER(flight.flight_days) LIKE '%mon%' AND LOWER(flight.flight_days) LIKE '%wed%';SELECT flight.flight_id FROM flight WHERE LOWER(flight.flight_days) LIKE '%mon%' AND LOWER(flight.flight_days) LIKE '%wed%';SELECT flight.flight_number, flight.flight_id FROM flight WHERE LOWER(flight.flight_days) LIKE '%mon%' AND LOWER(flight.flight_days) LIKE '%wed%';",Which flights operate on Mondays and Wednesdays? Give me the relevant flight numbers,"
Follow the instructions below to generate the query:
Filter airport, city, country names using LIKE.
Filter state code (eg NY), airport codes (eg JFK) using case-insensitive matches.
If multiple flight days are requested, use LIKE for each of the days separately, since they are not necessarily ordered.
","SELECT flight_number
FROM flight
WHERE flight_days LIKE '%mon%'
  AND flight_days LIKE '%wed%';",,,0,1,0,0,0,2.99,3417,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.49
atis,sqlite,instruct,SELECT state_code FROM airport WHERE LOWER(airport_name) LIKE LOWER('%Orlando International Airport%');,Which state code is Orlando International Airport in?,"
Follow the instructions below to generate the query:
Filter airport, city, country names using LIKE.
Filter state code (eg NY), airport codes (eg JFK) using case-insensitive matches.
If multiple flight days are requested, use LIKE and wildcards for each of the days separately, since they are not necessarily ordered.
","SELECT state_code
FROM airport
WHERE airport_name LIKE '%Orlando International Airport%';",,,0,1,0,0,0,4.15,3410,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.49
atis,sqlite,order_by,SELECT aircraft.aircraft_code FROM aircraft WHERE aircraft.cruising_speed > 200 ORDER BY aircraft.aircraft_code ASC NULLS LAST;,What are the aircraft codes for all aircraft with a cruising speed of over 200 mph? sort the aircraft codes in ascending order.,,"SELECT aircraft_code
FROM aircraft
WHERE cruising_speed > 200
ORDER BY aircraft_code ASC;",,,0,1,0,0,0,3.69,3173,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.40
atis,sqlite,order_by,"SELECT airline.airline_name, COUNT(flight.flight_id) AS number_of_flights FROM flight JOIN airline ON flight.airline_code = airline.airline_code GROUP BY airline.airline_name ORDER BY number_of_flights DESC LIMIT 2;SELECT airline.airline_code, COUNT(flight.flight_id) AS number_of_flights FROM flight JOIN airline ON flight.airline_code = airline.airline_code GROUP BY airline.airline_code ORDER BY number_of_flights DESC LIMIT 2;SELECT airline.airline_name, airline.airline_code, COUNT(flight.flight_id) AS number_of_flights FROM flight JOIN airline ON flight.airline_code = airline.airline_code GROUP BY airline.airline_name, airline.airline_code ORDER BY number_of_flights DESC LIMIT 2;",What are the top 2 airlines with the most flights?,,"SELECT a.airline_code,
       a.airline_name,
       COUNT(f.flight_id) AS flight_count
FROM flight f
JOIN airline a ON f.airline_code = a.airline_code
GROUP BY a.airline_code,
         a.airline_name
ORDER BY flight_count DESC
LIMIT 2;",,,0,1,0,0,0,2.83,3203,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.42
atis,sqlite,order_by,SELECT aircraft.aircraft_code FROM aircraft ORDER BY pay_load DESC LIMIT 1;,Which aircraft code can carry the highest weight of cargo that any aircraft can carry?,,"SELECT aircraft_code
FROM aircraft
ORDER BY pay_load DESC
LIMIT 1;",,,0,1,0,0,0,2.49,3160,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.40
atis,sqlite,order_by,"SELECT airport.airport_name, airport.minimum_connect_time FROM airport ORDER BY airport.minimum_connect_time ASC NULLS LAST;SELECT airport.airport_code, airport.minimum_connect_time FROM airport ORDER BY airport.minimum_connect_time ASC NULLS LAST;SELECT airport.airport_name, airport.airport_code, airport.minimum_connect_time FROM airport ORDER BY airport.minimum_connect_time ASC NULLS LAST;","Which airports have the shortest minimum connect time, sorted in ascending order? Show the minimum connect time.",,"SELECT airport_name,
       minimum_connect_time
FROM airport
ORDER BY minimum_connect_time ASC;",,,0,1,0,0,0,3.08,3293,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.46
atis,sqlite,order_by,"SELECT flight.flight_id, (flight.arrival_time - flight.departure_time) AS duration FROM flight WHERE to_airport = 'ORD' ORDER BY duration ASC NULLS LAST;","Which flight ids to Chicago (ORD) have the longest duration from departure to arrival, sorted in ascending order?",,"SELECT flight_id
FROM flight
WHERE to_airport = 'ORD'
  AND (arrival_time - departure_time) =
    (SELECT MAX(arrival_time - departure_time)
     FROM flight
     WHERE to_airport = 'ORD')
ORDER BY flight_id ASC;",,INCORRECT RESULTS,0,0,0,0,0,8.60,3910,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.73
atis,sqlite,ratio,"SELECT CAST(aircraft.range_miles AS REAL) / NULLIF(aircraft.pay_load, 0) AS range_to_payload_ratio FROM aircraft;",Calculate the ratio of the maximum range to the maximum payload for each aircraft,,"SELECT aircraft_code,
       1.0 * range_miles / pay_load AS ratio
FROM aircraft;",,,0,1,0,0,0,3.43,3421,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.51
atis,sqlite,ratio,"SELECT aircraft.manufacturer, AVG(CAST(aircraft.cruising_speed AS REAL) / NULLIF(aircraft.pay_load, 0)) AS speed_payload_ratio FROM aircraft GROUP BY aircraft.manufacturer ORDER BY speed_payload_ratio DESC;",How does the average ratio of the cruising speed to the payload of an aircraft vary across different aircraft manufacturers?,,"SELECT manufacturer,
       AVG(cruising_speed * 1.0 / pay_load) AS avg_ratio
FROM aircraft
GROUP BY manufacturer;",,,0,1,0,0,0,3.07,3180,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.41
atis,sqlite,ratio,"SELECT flight.airline_code, CAST(SUM(CASE WHEN flight.stops > 0 THEN 1 ELSE 0 END) AS REAL) / NULLIF(COUNT(*), 0) AS ratio FROM flight GROUP BY flight.airline_code;",What is the proportion of flights with stops out of all flights for each airline code?,,"SELECT airline_code,
       1.0 * SUM(CASE
                     WHEN stops > 0 THEN 1
                     ELSE 0
                 END) / COUNT(*) AS proportion
FROM flight
GROUP BY airline_code;",,,0,1,0,0,0,2.58,3314,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.47
atis,sqlite,ratio,"SELECT aircraft.aircraft_code, CAST(aircraft.capacity AS REAL) / NULLIF(aircraft.range_miles, 0) AS capacity_range_ratio FROM aircraft;",What is the ratio of aircraft capacity to its range in miles for each aircraft code?,,"SELECT aircraft_code,
       capacity * 1.0 / range_miles AS capacity_range_ratio
FROM aircraft;",,,0,1,0,0,0,5.26,3103,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.37
atis,sqlite,ratio,"SELECT fare.fare_id, CAST(fare.one_direction_cost AS REAL) / NULLIF(fare.round_trip_cost, 0) AS cost_ratio FROM fare ORDER BY cost_ratio NULLS LAST;",What is the ratio of one-way trip costs to round-trip costs for each fare?,,"SELECT fare_id,
       (one_direction_cost * 1.0 / round_trip_cost) AS one_way_to_round_trip_ratio
FROM fare;",,,0,1,0,0,0,5.59,3368,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.49
atis,sqlite,table_join,"SELECT DISTINCT airline.airline_name FROM airline WHERE NOT airline.airline_code IN (SELECT flight.airline_code FROM flight WHERE flight.from_airport = 'JFK' OR flight.to_airport = 'JFK' OR flight.stops > 0);SELECT DISTINCT airline.airline_code FROM airline WHERE NOT airline.airline_code IN (SELECT flight.airline_code FROM flight WHERE flight.from_airport = 'JFK' OR flight.to_airport = 'JFK' OR flight.stops > 0);SELECT DISTINCT airline.airline_name, airline.airline_code FROM airline WHERE NOT airline.airline_code IN (SELECT flight.airline_code FROM flight WHERE flight.from_airport = 'JFK' OR flight.to_airport = 'JFK' OR flight.stops > 0);","Which airlines do not have any flights that either depart from/arrive at JFK, or have one or more stops?",,"SELECT a.airline_code,
       a.airline_name
FROM airline a
WHERE NOT EXISTS
    (SELECT 1
     FROM flight f
     WHERE f.airline_code = a.airline_code
       AND (f.from_airport = 'JFK'
            OR f.to_airport = 'JFK'
            OR f.stops > 0));",,,0,1,0,0,0,5.30,3607,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.59
atis,sqlite,table_join,"SELECT airline.airline_name, flight.stops FROM flight JOIN airline ON flight.airline_code = airline.airline_code WHERE flight.from_airport = 'ORD' AND flight.to_airport = 'JFK' ORDER BY flight.stops NULLS LAST;SELECT airline.airline_code, flight.stops FROM flight JOIN airline ON flight.airline_code = airline.airline_code WHERE flight.from_airport = 'ORD' AND flight.to_airport = 'JFK' ORDER BY flight.stops NULLS LAST;SELECT airline.airline_name, airline.airline_code, flight.stops FROM flight JOIN airline ON flight.airline_code = airline.airline_code WHERE flight.from_airport = 'ORD' AND flight.to_airport = 'JFK' ORDER BY flight.stops NULLS LAST;","Which airlines offer flights from Chicago (ORD) to New York (JFK), and how many stops do they have, sorted by number of stops in ascending order?",,"SELECT a.airline_name,
       f.stops
FROM flight AS f
JOIN airline AS a ON f.airline_code = a.airline_code
WHERE f.from_airport = 'ORD'
  AND f.to_airport = 'JFK'
ORDER BY f.stops ASC;",,,0,1,0,0,0,4.43,3473,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.53
atis,sqlite,table_join,"SELECT DISTINCT airline.airline_name FROM flight JOIN airline ON flight.airline_code = airline.airline_code WHERE flight.from_airport = 'LAX' AND flight.to_airport = 'ORD';SELECT DISTINCT airline.airline_code FROM flight JOIN airline ON flight.airline_code = airline.airline_code WHERE flight.from_airport = 'LAX' AND flight.to_airport = 'ORD';SELECT DISTINCT airline.airline_name, airline.airline_code FROM flight JOIN airline ON flight.airline_code = airline.airline_code WHERE flight.from_airport = 'LAX' AND flight.to_airport = 'ORD';",Which airlines offer flights from LAX to ORD?,,"SELECT DISTINCT airline.airline_name
FROM flight
JOIN airline ON flight.airline_code = airline.airline_code
WHERE flight.from_airport = 'LAX'
  AND flight.to_airport = 'ORD';",,,0,1,0,0,0,2.87,3244,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.44
atis,sqlite,table_join,"SELECT DISTINCT airline.airline_name FROM flight_stop JOIN airport ON flight_stop.stop_airport = airport.airport_code JOIN flight ON flight_stop.flight_id = flight.flight_id JOIN airline ON flight.airline_code = airline.airline_code WHERE LOWER(airport.airport_location) LIKE LOWER('%Dallas%');SELECT DISTINCT airline.airline_code FROM flight_stop JOIN airport ON flight_stop.stop_airport = airport.airport_code JOIN flight ON flight_stop.flight_id = flight.flight_id JOIN airline ON flight.airline_code = airline.airline_code WHERE LOWER(airport.airport_location) LIKE LOWER('%Dallas%');SELECT DISTINCT airline.airline_name, airline.airline_code FROM flight_stop JOIN airport ON flight_stop.stop_airport = airport.airport_code JOIN flight ON flight_stop.flight_id = flight.flight_id JOIN airline ON flight.airline_code = airline.airline_code WHERE LOWER(airport.airport_location) LIKE LOWER('%Dallas%');",Which airlines offer flights with a stopover in Dallas?,,"SELECT DISTINCT a.airline_name
FROM airline a
JOIN flight f ON a.airline_code = f.airline_code
JOIN flight_stop fs ON f.flight_id = fs.flight_id
JOIN airport ap ON fs.stop_airport = ap.airport_code
WHERE ap.airport_location = 'Dallas';",,,0,1,0,0,0,7.07,3775,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.67
atis,sqlite,table_join,"SELECT flight.flight_id, food_service.meal_description FROM flight JOIN food_service ON flight.meal_code = food_service.meal_code WHERE LOWER(food_service.compartment) LIKE '%first class%';",Which flights serve meals in first class? Give me the flight id and meal description.,,"SELECT flight.flight_id,
       food_service.meal_description
FROM flight
JOIN food_service ON flight.meal_code = food_service.meal_code
WHERE food_service.compartment = 'First';",,INCORRECT RESULTS,0,0,0,0,0,2.35,3182,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- days AS d
-- fare AS f
-- month AS m
-- state AS s
-- flight AS fl
-- airline AS a
-- airport AS ai
-- aircraft AS air
-- time_zone AS tz
-- fare_basis AS fb
-- flight_leg AS fli
-- flight_fare AS ff
-- flight_stop AS fs
-- restriction AS r
-- dual_carrier AS dc
-- food_service AS fo
-- time_interval AS ti
-- ground_service AS gs
-- airport_service AS a2
-- class_of_service AS cos
-- code_description AS cd
-- compartment_class AS cc
-- equipment_sequence AS es
",,,,,,,,False,0.41
broker,sqlite,date_functions,"SELECT MIN(sdp.sbDpClose) AS lowest_price FROM sbDailyPrice AS sdp JOIN sbTicker AS st ON sdp.sbDpTickerId = st.sbTickerId WHERE st.sbTickerSymbol = 'VTI' AND sdp.sbDpDate >= date('now', '-7 days');",Lowest daily closest price for symbol `VTI` in the past 7 days,,"SELECT MIN(sbDailyPrice.sbDpClose) AS LowestClosePrice
FROM sbDailyPrice
JOIN sbTicker ON sbDailyPrice.sbDpTickerId = sbTicker.sbTickerId
WHERE sbTicker.sbTickerSymbol = 'VTI'
  AND sbDailyPrice.sbDpDate >= date('now', '-7 days');",,,0,1,0,0,0,4.46,1073,,,,"Use the following table aliases when referencing tables in the query:
-- sbCustomer AS sc
-- sbTicker AS st
-- sbDailyPrice AS sdp
-- sbTransaction AS sb
",,,,,,,,False,0.27
broker,sqlite,date_functions,"SELECT c.sbCustId, MIN(julianday(t.sbTxDateTime)) - julianday(c.sbCustJoinDate) AS DaysFromJoinToFirstTransaction FROM sbCustomer AS c JOIN sbTransaction AS t ON c.sbCustId = t.sbTxCustId GROUP BY c.sbCustId;",Return the customer id and the difference between their time from joining to their first transaction. Ignore customers who haven't made any transactions.,,"SELECT c.sbCustId,
       julianday(MIN(t.sbTxDateTime)) - julianday(c.sbCustJoinDate) AS time_difference
FROM sbCustomer c
JOIN sbTransaction t ON c.sbCustId = t.sbTxCustId
GROUP BY c.sbCustId;",,,0,1,0,0,0,4.92,1013,,,,"Use the following table aliases when referencing tables in the query:
-- sbCustomer AS sc
-- sbTicker AS st
-- sbDailyPrice AS sdp
-- sbTransaction AS sb
",,,,,,,,False,0.24
broker,sqlite,date_functions,"WITH SellTransactions AS (SELECT sbTxCustId, COUNT(*) AS num_tx FROM sbTransaction WHERE DATE(sbTxDateTime) = '2023-04-01' AND sbTxType = 'sell' GROUP BY sbTxCustId) SELECT c.sbCustId, c.sbCustName, st.num_tx FROM sbCustomer AS c JOIN SellTransactions AS st ON c.sbCustId = st.sbTxCustId ORDER BY st.num_tx DESC NULLS FIRST LIMIT 1;","Return the customer who made the most sell transactions on 2023-04-01. Return the id, name and number of transactions.",,"SELECT c.sbCustId AS id,
       c.sbCustName AS name,
       COUNT(t.sbTxId) AS num_transactions
FROM sbCustomer c
JOIN sbTransaction t ON c.sbCustId = t.sbTxCustId
WHERE t.sbTxType = 'sell'
  AND date(t.sbTxDateTime) = '2023-04-01'
GROUP BY c.sbCustId,
         c.sbCustName
ORDER BY num_transactions DESC
LIMIT 1;",,,0,1,0,0,0,6.36,1119,,,,"Use the following table aliases when referencing tables in the query:
-- sbCustomer AS sc
-- sbTicker AS st
-- sbDailyPrice AS sdp
-- sbTransaction AS sb
",,,,,,,,False,0.29
broker,sqlite,date_functions,"SELECT strftime('%Y-%m', sbTxDateTime) AS month, AVG(sbTxPrice) AS avg_price FROM sbTransaction WHERE sbTxStatus = 'success' AND sbTxDateTime BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY month ORDER BY month;SELECT strftime('%Y-%m-01 00:00:00', sbTxDateTime) AS datetime, AVG(sbTxPrice) AS avg_price FROM sbTransaction WHERE sbTxStatus = 'success' AND sbTxDateTime BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY datetime ORDER BY datetime;SELECT strftime('%Y-%m-01', sbTxDateTime) AS datetime, AVG(sbTxPrice) AS avg_price FROM sbTransaction WHERE sbTxStatus = 'success' AND sbTxDateTime BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY datetime ORDER BY datetime;",What is the monthly average transaction price for successful transactions in the 1st quarter of 2023?,,"SELECT strftime('%Y-%m', sbTxDateTime) AS MONTH,
       AVG(sbTxPrice) AS AvgTransactionPrice
FROM sbTransaction
WHERE sbTxStatus = 'success'
  AND sbTxDateTime >= '2023-01-01'
  AND sbTxDateTime < '2023-04-01'
GROUP BY strftime('%Y-%m', sbTxDateTime);",,,0,1,0,0,0,4.06,1036,,,,"Use the following table aliases when referencing tables in the query:
-- sbCustomer AS sc
-- sbTicker AS st
-- sbDailyPrice AS sdp
-- sbTransaction AS sb
",,,,,,,,False,0.25
broker,sqlite,date_functions,"SELECT COUNT(t.sbTxCustId) AS transaction_count FROM sbTransaction AS t JOIN sbCustomer AS c ON t.sbTxCustId = c.sbCustId WHERE c.sbCustJoinDate >= date('now', '-70 days');",number of transactions by users who joined in the past 70 days,,"SELECT c.sbCustId,
       COUNT(t.sbTxId) AS transaction_count
FROM sbCustomer c
JOIN sbTransaction t ON c.sbCustId = t.sbTxCustId
WHERE c.sbCustJoinDate >= date('now', '-70 days')
GROUP BY c.sbCustId;",,INCORRECT RESULTS,0,0,0,0,0,4.62,1131,,,,"Use the following table aliases when referencing tables in the query:
-- sbCustomer AS sc
-- sbTicker AS st
-- sbDailyPrice AS sdp
-- sbTransaction AS sb
",,,,,,,,False,0.30
car_dealership,sqlite,date_functions,"SELECT s.first_name, s.last_name, s.phone, julianday(s.termination_date) - julianday(s.hire_date) AS days_employed FROM salespersons AS s ORDER BY CASE WHEN days_employed IS NULL THEN 1 ELSE 0 END, days_employed ASC LIMIT 1;",Return the name and phone number of the salesperson with the shortest time from being hired to getting fired. Return the number of days he/she was employed for.,,"SELECT first_name || ' ' || last_name AS name,
       phone,
       julianday(termination_date) - julianday(hire_date) AS employment_days
FROM salespersons
ORDER BY employment_days ASC
LIMIT 1;",,INCORRECT RESULTS,0,0,0,0,0,5.23,1247,,,,"Use the following table aliases when referencing tables in the query:
-- cars AS c
-- salespersons AS s
-- customers AS cu
-- sales AS sa
-- inventory_snapshots AS inv
-- payments_received AS pr
-- payments_made AS pm
",,,,,,,,False,0.24
car_dealership,sqlite,date_functions,"SELECT COUNT(*) AS weekend_payments FROM payments_made WHERE vendor_name = 'Utility Company' AND strftime('%w', payment_date) IN ('0', '6');",Return the number of payments made on weekends to the vendor named 'Utility Company',,"SELECT COUNT(*)
FROM payments_made
WHERE vendor_name = 'Utility Company'
  AND strftime('%w', payment_date) IN ('0',
                                       '6');",,,0,1,0,0,0,3.50,1153,,,,"Use the following table aliases when referencing tables in the query:
-- cars AS c
-- salespersons AS s
-- customers AS cu
-- sales AS sa
-- inventory_snapshots AS inv
-- payments_received AS pr
-- payments_made AS pm
",,,,,,,,False,0.20
car_dealership,sqlite,date_functions,"SELECT CASE WHEN strftime('%m', s.sale_date) BETWEEN '01' AND '03' THEN '2023-01-01' WHEN strftime('%m', s.sale_date) BETWEEN '04' AND '06' THEN '2023-04-01' WHEN strftime('%m', s.sale_date) BETWEEN '07' AND '09' THEN '2023-07-01' ELSE '2023-10-01' END AS quarter, c.state, SUM(s.sale_price) AS total_sales FROM sales AS s JOIN customers AS c ON s.customer_id = c.id WHERE strftime('%Y', s.sale_date) = '2023' GROUP BY c.state, quarter HAVING SUM(s.sale_price) > 0 ORDER BY quarter, c.state;",What were the total quarterly sales in 2023 grouped by customer's state? Represent each quarter as the first date in the quarter.,,"SELECT CASE
           WHEN strftime('%m', sale_date) IN ('01',
                                              '02',
                                              '03') THEN date(strftime('%Y', sale_date) || '-01-01')
           WHEN strftime('%m', sale_date) IN ('04',
                                              '05',
                                              '06') THEN date(strftime('%Y', sale_date) || '-04-01')
           WHEN strftime('%m', sale_date) IN ('07',
                                              '08',
                                              '09') THEN date(strftime('%Y', sale_date) || '-07-01')
           WHEN strftime('%m', sale_date) IN ('10',
                                              '11',
                                              '12') THEN date(strftime('%Y', sale_date) || '-10-01')
       END AS quarter_start,
       customers.state,
       SUM(sale_price) AS total_sales
FROM sales
JOIN customers ON customers.id = sales.customer_id
WHERE sale_date BETWEEN '2023-01-01' AND '2023-12-31'
GROUP BY quarter_start,
         customers.state
ORDER BY quarter_start,
         customers.state;",,,0,1,0,0,0,5.05,1476,,,,"Use the following table aliases when referencing tables in the query:
-- cars AS c
-- salespersons AS s
-- customers AS cu
-- sales AS sa
-- inventory_snapshots AS inv
-- payments_received AS pr
-- payments_made AS pm
",,,,,,,,False,0.34
car_dealership,sqlite,date_functions,"WITH latest_snapshot AS (SELECT MAX(snapshot_date) AS snapshot_date FROM inventory_snapshots WHERE snapshot_date BETWEEN '2023-03-01' AND '2023-03-31'), latest_snapshot_data AS (SELECT inv.car_id FROM inventory_snapshots AS inv JOIN latest_snapshot AS ls ON inv.snapshot_date = ls.snapshot_date WHERE inv.is_in_inventory = TRUE) SELECT c.id, c.make, c.model, c.year FROM cars AS c JOIN latest_snapshot_data AS lsd ON c.id = lsd.car_id;","Which cars were in inventory in the latest snapshot for march 2023? Return the car id, make, model, and year. Cars are considered to be in inventory"" if is_in_inventory is True.""",,"SELECT c.id,
       c.make,
       c.model,
       c.year
FROM cars c
JOIN inventory_snapshots i ON c.id = i.car_id
WHERE i.is_in_inventory = 1
  AND i.snapshot_date =
    (SELECT MAX(snapshot_date)
     FROM inventory_snapshots
     WHERE snapshot_date BETWEEN '2023-03-01' AND '2023-03-31');",,,0,1,0,0,0,3.61,1291,,,,"Use the following table aliases when referencing tables in the query:
-- cars AS c
-- salespersons AS s
-- customers AS cu
-- sales AS sa
-- inventory_snapshots AS inv
-- payments_received AS pr
-- payments_made AS pm
",,,,,,,,False,0.26
car_dealership,sqlite,date_functions,"SELECT payment_date, payment_method, SUM(payment_amount) AS total_amount FROM payments_received WHERE payment_date >= DATE('now',  '-' || ((strftime('%w', 'now') + 6) % 7) || ' days', '-7 days') AND payment_date < DATE('now',  '-' || ((strftime('%w', 'now') + 6) % 7) || ' days') GROUP BY payment_date, payment_method ORDER BY payment_date DESC, payment_method ASC;","show me the daily total amount of payments received in the whole of the previous ISO week not including the current week, split by the payment_method",,"SELECT payment_date,
       payment_method,
       SUM(payment_amount) AS daily_total
FROM payments_received
WHERE payment_date BETWEEN date('now', 'weekday 1', '-7 days') AND date('now', 'weekday 1', '-1 day')
GROUP BY payment_date,
         payment_method
ORDER BY payment_date,
         payment_method;",,,0,1,0,0,0,6.74,1842,,,,"Use the following table aliases when referencing tables in the query:
-- cars AS c
-- salespersons AS s
-- customers AS cu
-- sales AS sa
-- inventory_snapshots AS inv
-- payments_received AS pr
-- payments_made AS pm
",,,,,,,,False,0.50
derm_treatment,sqlite,date_functions,"SELECT COUNT(*) FROM treatments t JOIN diagnoses d ON t.diag_id = d.diag_id JOIN drugs dr ON t.drug_id = dr.drug_id WHERE d.diag_name LIKE '%psoriasis%' AND dr.fda_appr_dt IS NOT NULL AND t.end_dt >= DATE('now', '-6 months');",How many treatments for diagnoses containing 'psoriasis' (match with wildcards case-insensitively) involve drugs that have been FDA-approved and the treatments have ended within the last 6 months from today?,,"SELECT COUNT(*) AS treatment_count
FROM treatments
JOIN diagnoses ON treatments.diag_id = diagnoses.diag_id
JOIN drugs ON treatments.drug_id = drugs.drug_id
WHERE lower(diagnoses.diag_name) LIKE '%psoriasis%'
  AND drugs.fda_appr_dt IS NOT NULL
  AND treatments.end_dt IS NOT NULL
  AND treatments.end_dt BETWEEN date('now', '-6 months') AND date('now');",,,0,1,0,0,0,4.28,1675,,,,"Use the following table aliases when referencing tables in the query:
-- doctors AS d
-- patients AS p
-- drugs AS dr
-- diagnoses AS di
-- treatments AS t
-- outcomes AS o
-- adverse_events AS ae
-- concomitant_meds AS cm
",,,,,,,,False,0.39
derm_treatment,sqlite,date_functions,"WITH doc_first_treatment AS (SELECT d.doc_id, d.last_name, d.year_reg, t.treatment_id, t.start_dt, ROW_NUMBER() OVER (PARTITION BY d.doc_id ORDER BY t.start_dt ASC) AS rn FROM doctors AS d JOIN treatments AS t ON d.doc_id = t.doc_id WHERE d.year_reg = strftime('%Y', 'now', '-2 years')) SELECT last_name, year_reg, start_dt AS first_treatment_date, treatment_id AS first_treatment_id FROM doc_first_treatment WHERE rn = 1;","List the last name, year of registration, and first treatment (date and id) by doctors who were registered 2 years ago.",,"SELECT d.last_name,
       d.year_reg,
       t.start_dt AS first_treatment_date,
       t.treatment_id AS first_treatment_id
FROM doctors d
JOIN treatments t ON d.doc_id = t.doc_id
WHERE d.year_reg = (CAST(strftime('%Y', 'now') AS INTEGER) - 2)
  AND t.start_dt =
    (SELECT MIN(t2.start_dt)
     FROM treatments t2
     WHERE t2.doc_id = d.doc_id);",,,0,1,0,0,0,5.32,1676,,,,"Use the following table aliases when referencing tables in the query:
-- doctors AS d
-- patients AS p
-- drugs AS dr
-- diagnoses AS di
-- treatments AS t
-- outcomes AS o
-- adverse_events AS ae
-- concomitant_meds AS cm
",,,,,,,,False,0.39
derm_treatment,sqlite,date_functions,"SELECT t.treatment_id, t.start_dt, ae.reported_dt, ae.description FROM adverse_events AS ae JOIN treatments AS t ON ae.treatment_id = t.treatment_id WHERE ae.reported_dt BETWEEN t.start_dt AND date(t.start_dt, '+10 days');","Return the treatment id, treatment start date, adverse event date and description of all adverse events that occured within 10 days after starting treatment",,"SELECT t.treatment_id,
       t.start_dt AS treatment_start_date,
       a.reported_dt AS adverse_event_date,
       a.description
FROM treatments t
JOIN adverse_events a ON t.treatment_id = a.treatment_id
WHERE a.reported_dt BETWEEN t.start_dt AND DATE(t.start_dt, '+10 days');",,,0,1,0,0,0,3.15,1394,,,,"Use the following table aliases when referencing tables in the query:
-- doctors AS d
-- patients AS p
-- drugs AS dr
-- diagnoses AS di
-- treatments AS t
-- outcomes AS o
-- adverse_events AS ae
-- concomitant_meds AS cm
",,,,,,,,False,0.27
derm_treatment,sqlite,date_functions,"SELECT t.treatment_id, t.start_dt AS treatment_start_date, t.end_dt AS treatment_end_date, cm.start_dt AS concomitant_med_start_date, cm.end_dt AS concomitant_med_end_date FROM treatments AS t JOIN concomitant_meds AS cm ON t.treatment_id = cm.treatment_id WHERE t.is_placebo = 1 AND cm.start_dt BETWEEN t.start_dt AND date(t.start_dt, '+14 days') ORDER BY t.treatment_id;","show all placebo treatment id, start and end date, where there concomitant_meds were started within 2 weeks of starting the treatment. also return the start and end dates of all concomitant drug usage.",,"SELECT t.treatment_id,
       t.start_dt,
       t.end_dt,
       cm.start_dt AS concomitant_start_dt,
       cm.end_dt AS concomitant_end_dt
FROM treatments t
JOIN concomitant_meds cm ON t.treatment_id = cm.treatment_id
WHERE t.is_placebo = 1
  AND date(cm.start_dt) BETWEEN date(t.start_dt) AND date(t.start_dt, '+14 days');",,,0,1,0,0,0,5.09,1807,,,,"Use the following table aliases when referencing tables in the query:
-- doctors AS d
-- patients AS p
-- drugs AS dr
-- diagnoses AS di
-- treatments AS t
-- outcomes AS o
-- adverse_events AS ae
-- concomitant_meds AS cm
",,,,,,,,False,0.44
derm_treatment,sqlite,date_functions,"SELECT AVG(strftime('%Y', 'now') - strftime('%Y', date_of_birth)) AS avg_age FROM patients WHERE gender = 'Male' AND ins_type = 'private';",what is average age (in integer years) of all registered male patients with private insurance currently?,,"SELECT CAST(AVG(CAST((julianday('now') - julianday(date_of_birth)) / 365.25 AS INTEGER)) AS INTEGER) AS average_age
FROM patients
WHERE gender = 'Male'
  AND ins_type = 'private';",,INCORRECT RESULTS,0,0,0,0,0,7.08,1933,,,,"Use the following table aliases when referencing tables in the query:
-- doctors AS d
-- patients AS p
-- drugs AS dr
-- diagnoses AS di
-- treatments AS t
-- outcomes AS o
-- adverse_events AS ae
-- concomitant_meds AS cm
",,,,,,,,False,0.51
ewallet,sqlite,date_functions,"WITH retail_merchants AS (SELECT mid FROM merchants WHERE LOWER(category) LIKE LOWER('%retail%') AND status = 'active'), merchant_balances AS (SELECT balance FROM wallet_merchant_balance_daily AS wmbd JOIN retail_merchants AS rm ON wmbd.merchant_id = rm.mid WHERE DATE(wmbd.updated_at) = date('now')) SELECT AVG(balance) AS median_balance FROM (SELECT balance FROM merchant_balances ORDER BY balance LIMIT 2 - (SELECT COUNT(*) FROM merchant_balances) % 2 OFFSET (SELECT (COUNT(*) - 1) / 2 FROM merchant_balances));",Give me today's median merchant wallet balance for all active merchants whose category contains 'retail',,"WITH sorted_balances AS
  (SELECT wmb.balance,
          ROW_NUMBER() OVER (
                             ORDER BY wmb.balance) AS rn,
          COUNT(*) OVER () AS cnt
   FROM wallet_merchant_balance_daily AS wmb
   JOIN merchants AS m ON wmb.merchant_id = m.mid
   WHERE m.status = 'active'
     AND m.category LIKE '%retail%'
     AND date(wmb.updated_at) = date('now'))
SELECT AVG(balance) AS median_balance
FROM sorted_balances
WHERE rn IN ((cnt + 1) / 2,
             (cnt + 2) / 2);",,,0,1,0,0,0,7.08,2088,,,,"Use the following table aliases when referencing tables in the query:
-- consumer_div.users AS u
-- consumer_div.merchants AS m
-- consumer_div.coupons AS c
-- consumer_div.wallet_transactions_daily AS wtd
-- consumer_div.wallet_user_balance_daily AS wubd
-- consumer_div.wallet_merchant_balance_daily AS wmbd
-- consumer_div.notifications AS n
-- consumer_div.user_sessions AS us
-- consumer_div.user_setting_snapshot AS uss
",,,,,,,,False,0.51
ewallet,sqlite,date_functions,"SELECT AVG(tx_limit_daily) AS avg_daily_limit, AVG(tx_limit_monthly) AS avg_monthly_limit FROM user_setting_snapshot WHERE snapshot_date = (SELECT MIN(snapshot_date) FROM user_setting_snapshot WHERE snapshot_date >= '2023-01-01' AND snapshot_date < '2024-01-01');",What was the average transaction daily and monthly limit for the earliest setting snapshot in 2023?,,"SELECT AVG(tx_limit_daily) AS avg_daily_limit,
       AVG(tx_limit_monthly) AS avg_monthly_limit
FROM user_setting_snapshot
WHERE snapshot_date =
    (SELECT MIN(snapshot_date)
     FROM user_setting_snapshot
     WHERE snapshot_date BETWEEN '2023-01-01' AND '2023-12-31');",,,0,1,0,0,0,5.20,1966,,,,"Use the following table aliases when referencing tables in the query:
-- consumer_div.users AS u
-- consumer_div.merchants AS m
-- consumer_div.coupons AS c
-- consumer_div.wallet_transactions_daily AS wtd
-- consumer_div.wallet_user_balance_daily AS wubd
-- consumer_div.wallet_merchant_balance_daily AS wmbd
-- consumer_div.notifications AS n
-- consumer_div.user_sessions AS us
-- consumer_div.user_setting_snapshot AS uss
",,,,,,,,False,0.45
ewallet,sqlite,date_functions,"WITH earliest_coupons AS (SELECT c.merchant_id, MIN(c.start_date) AS earliest_coupon_start_date FROM coupons AS c GROUP BY c.merchant_id) SELECT m.mid AS merchant_id, m.created_at AS merchant_registration_date, ec.earliest_coupon_start_date, c.cid AS earliest_coupon_id FROM merchants AS m JOIN earliest_coupons AS ec ON m.mid = ec.merchant_id JOIN coupons AS c ON ec.merchant_id = c.merchant_id AND ec.earliest_coupon_start_date = c.start_date WHERE ec.earliest_coupon_start_date <= date(m.created_at, '+1 year');","Which merchants earliest coupon start date was within a year of the merchant's registration? Return the merchant id, registration date, and earliest coupon id and start date",,"WITH earliest_coupons AS
  (SELECT merchant_id,
          MIN(start_date) AS earliest_start_date
   FROM coupons
   GROUP BY merchant_id)
SELECT m.mid AS merchant_id,
       m.created_at AS registration_date,
       c.cid AS earliest_coupon_id,
       c.start_date AS earliest_coupon_start_date
FROM merchants m
JOIN earliest_coupons ec ON m.mid = ec.merchant_id
JOIN coupons c ON c.merchant_id = m.mid
AND c.start_date = ec.earliest_start_date
WHERE c.start_date BETWEEN m.created_at AND date(m.created_at, '+1 year');",,,0,1,0,0,0,5.68,2039,,,,"Use the following table aliases when referencing tables in the query:
-- consumer_div.users AS u
-- consumer_div.merchants AS m
-- consumer_div.coupons AS c
-- consumer_div.wallet_transactions_daily AS wtd
-- consumer_div.wallet_user_balance_daily AS wubd
-- consumer_div.wallet_merchant_balance_daily AS wmbd
-- consumer_div.notifications AS n
-- consumer_div.user_sessions AS us
-- consumer_div.user_setting_snapshot AS uss
",,,,,,,,False,0.48
ewallet,sqlite,date_functions,"SELECT u.username, u.email, u.created_at FROM users AS u LEFT JOIN notifications AS n ON u.uid = n.user_id AND n.created_at BETWEEN u.created_at AND date(u.created_at, '+1 year') WHERE n.user_id IS NULL;","Which users did not get a notification within the first year of signing up? Return their usernames, emails and signup dates.",,"SELECT u.username,
       u.email,
       u.created_at
FROM users u
WHERE NOT EXISTS
    (SELECT 1
     FROM notifications n
     WHERE n.user_id = u.uid
       AND n.created_at BETWEEN u.created_at AND datetime(u.created_at, '+1 year'));",,,0,1,0,0,0,4.23,1642,,,,"Use the following table aliases when referencing tables in the query:
-- consumer_div.users AS u
-- consumer_div.merchants AS m
-- consumer_div.coupons AS c
-- consumer_div.wallet_transactions_daily AS wtd
-- consumer_div.wallet_user_balance_daily AS wubd
-- consumer_div.wallet_merchant_balance_daily AS wmbd
-- consumer_div.notifications AS n
-- consumer_div.user_sessions AS us
-- consumer_div.user_setting_snapshot AS uss
",,,,,,,,False,0.31
ewallet,sqlite,date_functions,"SELECT device_type, AVG(strftime('%s', session_end_ts) - strftime('%s', session_start_ts)) AS avg_session_duration_seconds FROM user_sessions WHERE session_end_ts IS NOT NULL GROUP BY device_type;",what was the average user session duration in seconds split by device_type?,,"SELECT device_type,
       AVG((julianday(session_end_ts) - julianday(session_start_ts)) * 86400) AS avg_session_duration_seconds
FROM user_sessions
WHERE session_start_ts IS NOT NULL
  AND session_end_ts IS NOT NULL
GROUP BY device_type;",,,0,1,0,0,0,2.67,1438,,,,"Use the following table aliases when referencing tables in the query:
-- consumer_div.users AS u
-- consumer_div.merchants AS m
-- consumer_div.coupons AS c
-- consumer_div.wallet_transactions_daily AS wtd
-- consumer_div.wallet_user_balance_daily AS wubd
-- consumer_div.wallet_merchant_balance_daily AS wmbd
-- consumer_div.notifications AS n
-- consumer_div.user_sessions AS us
-- consumer_div.user_setting_snapshot AS uss
",,,,,,,,False,0.22
geography,sqlite,group_by,"SELECT lake.state_name, COUNT(lake.lake_name) AS lake_count FROM lake GROUP BY lake.state_name ORDER BY lake_count DESC NULLS FIRST;",How many lakes are there in each state?,,"SELECT state_name,
       COUNT(*) AS lake_count
FROM lake
GROUP BY state_name;",,,0,1,0,0,0,2.15,1044,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.15
geography,sqlite,group_by,"SELECT mountain.country_name, COUNT(mountain.mountain_name) AS number_of_mountains FROM mountain GROUP BY mountain.country_name ORDER BY number_of_mountains DESC NULLS FIRST;",How many mountains are there in each country?,,"SELECT country_name,
       COUNT(*) AS mountain_count
FROM mountain
GROUP BY country_name;",,,0,1,0,0,0,3.64,1108,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.17
geography,sqlite,group_by,"SELECT river.country_name, COUNT(DISTINCT river.river_name) AS number_of_rivers FROM river GROUP BY river.country_name ORDER BY number_of_rivers DESC NULLS FIRST;",How many rivers flow through each country?,,"SELECT country_name,
       COUNT(*) AS river_count
FROM river
GROUP BY country_name;",,,0,1,0,0,0,2.45,1107,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.17
geography,sqlite,group_by,"SELECT river.country_name, AVG(river.length) AS average_length FROM river GROUP BY river.country_name ORDER BY average_length DESC;",What is the average length of rivers in each country?,,"SELECT country_name,
       AVG(LENGTH) AS average_length
FROM river
GROUP BY country_name;",,,0,1,0,0,0,2.80,1111,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.17
geography,sqlite,group_by,"SELECT city.country_name, SUM(city.population) AS total_population FROM city GROUP BY city.country_name ORDER BY total_population DESC;",What is the total population in cities by country?,,"SELECT country_name,
       SUM(population) AS total_population
FROM city
GROUP BY country_name;",,,0,1,0,0,0,2.31,1047,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.15
geography,sqlite,instruct,"SELECT city_name, population FROM city WHERE LOWER(country_name) LIKE LOWER('%United States%');",Get the cities in the United States and their population,"
Follow the instructions below to generate the query:
Always filter names using LIKE
","SELECT city_name,
       population
FROM city
WHERE country_name LIKE '%United States%';",,,0,1,0,0,0,3.56,1188,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.20
geography,sqlite,instruct,"SELECT mountain_name, mountain_altitude FROM mountain WHERE LOWER(country_name) LIKE LOWER('%Nepal%');",What are the names and altitudes of the mountains in Nepal?,"
Follow the instructions below to generate the query:
Always filter names using LIKE
","SELECT mountain_name,
       mountain_altitude
FROM mountain
WHERE country_name LIKE '%Nepal%';",,,0,1,0,0,0,3.25,1321,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.26
geography,sqlite,instruct,"SELECT lake_name, area FROM lake WHERE LOWER(state_name) LIKE LOWER('%Michigan%');",What are the names and areas of the lakes in Michigan?,"
Follow the instructions below to generate the query:
Always filter names using LIKE
","SELECT lake_name,
       area
FROM lake
WHERE state_name LIKE '%Michigan%';",,,0,1,0,0,0,4.24,1253,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.23
geography,sqlite,instruct,"SELECT river_name FROM river WHERE traverse LIKE '%,%,%';",Which rivers traverse at least 3 cities/landmarks?,"
Follow the instructions below to generate the query:
Always filter names using LIKE
","SELECT river_name
FROM river
WHERE (LENGTH(traverse) - LENGTH(REPLACE(traverse, ',', '')) + 1) >= 3;",,,0,1,0,0,0,6.09,1524,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.35
geography,sqlite,instruct,SELECT state_name FROM state WHERE population < 100000;,Which states have fewer than a hundred thousand people?,"
Follow the instructions below to generate the query:
Always filter names using LIKE
","SELECT state_name
FROM state
WHERE population < 100000
  AND state_name LIKE '%';",,,0,1,0,0,0,3.97,1255,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.23
geography,sqlite,order_by,"SELECT mountain.mountain_name, mountain.mountain_altitude FROM mountain ORDER BY mountain.mountain_altitude DESC;","What are the highest mountains in meters, ordered from highest to lowest altitude?",,"SELECT mountain_name,
       mountain_altitude
FROM mountain
ORDER BY mountain_altitude DESC;",,,0,1,0,0,0,5.61,1242,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.23
geography,sqlite,order_by,"SELECT river.river_name, river.length FROM river ORDER BY river.length DESC;","What are the longest rivers in meters, ordered from longest to shortest?",,"SELECT river_name,
       LENGTH
FROM river
ORDER BY LENGTH DESC;",,,0,1,0,0,0,3.22,1109,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.17
geography,sqlite,order_by,"SELECT city.city_name, city.population FROM city ORDER BY city.population DESC LIMIT 5;",What are the top 5 cities with the highest population? Give both city names and the population.,,"SELECT city_name,
       population
FROM city
ORDER BY population DESC
LIMIT 5;",,,0,1,0,0,0,2.95,1119,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.17
geography,sqlite,order_by,"SELECT lake.lake_name, lake.area FROM lake ORDER BY lake.area DESC;","Which lakes have the largest areas in square kilometers, ordered from largest to smallest?",,"SELECT lake_name,
       area
FROM lake
ORDER BY area DESC;",,,0,1,0,0,0,2.72,1175,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.20
geography,sqlite,order_by,"SELECT state.state_name, state.density FROM state ORDER BY state.density DESC;","Which states have the highest population density in people per square kilometer, ordered from highest to lowest?",,"SELECT state_name,
       density
FROM state
ORDER BY density DESC;",,,0,1,0,0,0,2.66,1178,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.20
geography,sqlite,ratio,"SELECT state_name, population / NULLIF(area, 0) AS population_density FROM state;",Get the ratio of population per area for each state,,"SELECT state_name,
       population * 1.0 / area AS population_per_area
FROM state;",,,0,1,0,0,0,3.37,1239,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.23
geography,sqlite,ratio,"SELECT city.city_name, CAST(city.population AS REAL) / NULLIF(state.population, 0) AS population_ratio FROM city JOIN state ON city.state_name = state.state_name ORDER BY population_ratio DESC;","How does the population of each city vary in relation to the population of its corresponding state? Return the city name, and the proportion of each city's population relative to the state.",,"SELECT city.city_name,
       city.population * 1.0 / state.population AS proportion
FROM city
JOIN state ON city.state_name = state.state_name
AND city.country_name = state.country_name;",,,0,1,0,0,0,3.74,1287,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.24
geography,sqlite,ratio,"SELECT (CAST(everest.mountain_altitude AS REAL) / NULLIF(dhaulagiri.mountain_altitude, 0)) AS altitude_ratio FROM (SELECT mountain_altitude FROM mountain WHERE mountain_name = 'Mount Everest') AS everest, (SELECT mountain_altitude FROM mountain WHERE mountain_name = 'Dhaulagiri') AS dhaulagiri;",What is the ratio of the altitude of 'Mount Everest' to the altitude of 'Dhaulagiri'? Match strings exactly,,"SELECT
  (SELECT mountain_altitude
   FROM mountain
   WHERE mountain_name = 'Mount Everest') * 1.0 /
  (SELECT mountain_altitude
   FROM mountain
   WHERE mountain_name = 'Dhaulagiri') AS ratio;",,,0,1,0,0,0,3.09,1151,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.19
geography,sqlite,ratio,"SELECT CAST((SELECT length FROM river WHERE LOWER(river_name) LIKE '%mississippi%') AS REAL) / NULLIF((SELECT length FROM river WHERE LOWER(river_name) LIKE '%rhine%'), 0) AS ratio;",What is the ratio of the length of the Mississippi River to the length of the Rhine River?,,"SELECT
  (SELECT LENGTH
   FROM river
   WHERE river_name = 'Mississippi') * 1.0 /
  (SELECT LENGTH
   FROM river
   WHERE river_name = 'Rhine') AS ratio;",,,0,1,0,0,0,3.90,1267,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.24
geography,sqlite,ratio,"SELECT CAST(SUM(NULLIF(state.population, 0)) FILTER(WHERE LOWER(state.country_name) LIKE '%united states%') AS REAL) / CAST(SUM(NULLIF(state.population, 0)) FILTER(WHERE LOWER(state.state_name) LIKE '%california%') AS REAL) AS population_ratio FROM state;",What is the ratio of the population of the United States to the population of California?,,"SELECT 1.0 *
  (SELECT SUM(population)
   FROM state
   WHERE country_name = 'United States') /
  (SELECT population
   FROM state
   WHERE state_name = 'California'
     AND country_name = 'United States') AS ratio;",,,0,1,0,0,0,7.34,1659,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.41
geography,sqlite,table_join,"SELECT l.country_name, AVG(r.length) AS average_length FROM river AS r JOIN lake AS l ON r.country_name = l.country_name GROUP BY 1;",What is the average length of rivers per country in countries with a lake?,,"SELECT river.country_name,
       AVG(river.length) AS avg_length
FROM river
WHERE river.country_name IN
    (SELECT DISTINCT country_name
     FROM lake)
GROUP BY river.country_name;",,,0,1,0,0,0,3.67,1325,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.27
geography,sqlite,table_join,"SELECT highlow.state_name, highlow.highest_point, state.density FROM highlow JOIN state ON highlow.state_name = state.state_name;",What is the highest point in each state and what is the population density of that state?,,"SELECT s.state_name,
       h.highest_point,
       s.density
FROM state AS s
JOIN highlow AS h ON s.state_name = h.state_name;",,,0,1,0,0,0,2.96,1260,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.24
geography,sqlite,table_join,SELECT DISTINCT lake.country_name FROM lake JOIN river ON lake.country_name = river.country_name;,Which countries have both lakes and rivers?,,"SELECT DISTINCT lake.country_name
FROM lake
INNER JOIN river ON lake.country_name = river.country_name;",,,0,1,0,0,0,4.87,1174,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.20
geography,sqlite,table_join,SELECT lake.lake_name FROM lake JOIN state ON lake.state_name = state.state_name WHERE state.area > 1000 AND LOWER(lake.lake_name) LIKE LOWER('Lake%') ORDER BY lake.lake_name NULLS LAST;,"Which lakes have a name that starts with ""Lake""? They should be located in states with an area greater than 1000 square kilometers.",,"SELECT lake.lake_name
FROM lake
JOIN state ON lake.state_name = state.state_name
WHERE lake.lake_name LIKE 'Lake%'
  AND state.area > 1000;",,,0,1,0,0,0,4.53,1274,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.24
geography,sqlite,table_join,SELECT border_info.border FROM border_info JOIN lake ON border_info.state_name = lake.state_name WHERE LOWER(lake.lake_name) LIKE LOWER('%Ontario%');,Which states border the state where lake ontario is?,,"SELECT border
FROM border_info
WHERE state_name =
    (SELECT state_name
     FROM lake
     WHERE lower(lake_name) = 'lake ontario');",,,0,1,0,0,0,5.76,1383,,,,"Use the following table aliases when referencing tables in the query:
-- city AS c
-- lake AS l
-- river AS r
-- state AS s
-- highlow AS h
-- mountain AS m
-- border_info AS bi
",,,,,,,,False,0.29
restaurants,sqlite,group_by,"SELECT location.city_name, COUNT(DISTINCT location.restaurant_id) AS number_of_restaurants FROM LOCATION GROUP BY location.city_name ORDER BY number_of_restaurants DESC;",How many restaurants are there in each city? Order the results by the number of restaurants in descending order.,,"SELECT city_name,
       COUNT(*) AS restaurant_count
FROM restaurant
GROUP BY city_name
ORDER BY restaurant_count DESC;",,,0,1,0,0,0,3.94,529,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.13
restaurants,sqlite,group_by,"SELECT restaurant.city_name, COUNT(*) AS number_of_restaurants FROM restaurant WHERE LOWER(restaurant.food_type) LIKE LOWER('%Italian%') GROUP BY restaurant.city_name ORDER BY number_of_restaurants DESC;",How many restaurants serve Italian food in each city?,,"SELECT city_name,
       COUNT(*) AS italian_restaurant_count
FROM restaurant
WHERE food_type = 'Italian'
GROUP BY city_name;",,,0,1,0,0,0,2.84,457,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.10
restaurants,sqlite,group_by,"SELECT restaurant.food_type, AVG(restaurant.rating) AS average_rating FROM restaurant GROUP BY restaurant.food_type ORDER BY average_rating DESC;",What is the average rating of restaurants serving each type of food?,,"SELECT food_type,
       AVG(rating) AS average_rating
FROM restaurant
GROUP BY food_type;",,,0,1,0,0,0,4.24,453,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.10
restaurants,sqlite,group_by,"SELECT location.city_name, COUNT(DISTINCT location.restaurant_id) AS total_count FROM LOCATION GROUP BY location.city_name;",What is the total count of restaurants in each city?,,"SELECT city_name,
       COUNT(*) AS total_restaurants
FROM restaurant
GROUP BY city_name;",,,0,1,0,0,0,3.70,532,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.14
restaurants,sqlite,group_by,"SELECT restaurant.food_type, COUNT(DISTINCT restaurant.id) AS total_number_of_restaurants FROM restaurant GROUP BY restaurant.food_type;",What is the total number of restaurants serving each type of food?,,"SELECT food_type,
       COUNT(*) AS total_restaurants
FROM restaurant
GROUP BY food_type;",,,0,1,0,0,0,2.57,452,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.10
restaurants,sqlite,instruct,SELECT DISTINCT restaurant.name FROM restaurant WHERE LOWER(restaurant.city_name) LIKE LOWER('%Los Angeles%') AND restaurant.rating > 4 ORDER BY restaurant.name NULLS LAST;,What are the names of the restaurants in Los Angeles that have a rating higher than 4?,"
Follow the instructions below to generate the query:
Match all strings case-insensitively using wildcard operators
","SELECT name
FROM restaurant
WHERE city_name LIKE '%los angeles%' COLLATE NOCASE
  AND rating > 4;",,,0,1,0,0,0,5.73,934,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.30
restaurants,sqlite,instruct,SELECT restaurant.name FROM restaurant WHERE LOWER(LOWER(restaurant.food_type)) LIKE LOWER('%italian%');,What are the names of the restaurants that serve Italian food?,"
Follow the instructions below to generate the query:
Match all strings case-insensitively using wildcard operators
","SELECT name
FROM restaurant
WHERE food_type LIKE '%italian%' COLLATE NOCASE;",,,0,1,0,0,0,2.99,536,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.13
restaurants,sqlite,instruct,"SELECT restaurant.name, restaurant.food_type FROM restaurant JOIN LOCATION ON restaurant.id = location.restaurant_id WHERE LOWER(location.street_name) LIKE LOWER('%Market St%') AND LOWER(location.city_name) LIKE LOWER('%San Francisco%');",What's the name and food type of all the restaurants located on Market St in San Francisco?,"
Follow the instructions below to generate the query:
Match all strings case-insensitively using wildcard operators
","SELECT restaurant.name,
       restaurant.food_type
FROM restaurant
JOIN LOCATION ON restaurant.id = location.restaurant_id
WHERE location.street_name LIKE '%market st%' COLLATE NOCASE
  AND restaurant.city_name LIKE '%san francisco%' COLLATE NOCASE;",,,0,1,0,0,0,3.26,766,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.23
restaurants,sqlite,instruct,"SELECT restaurant.name, restaurant.rating FROM restaurant WHERE restaurant.rating > 4 AND LOWER(restaurant.city_name) LIKE LOWER('%New York%');",What's the name and rating of all the restaurants that have a rating greater than 4 and are located in the city of New York?,"
Follow the instructions below to generate the query:
Match all strings case-insensitively using wildcard operators
","SELECT name,
       rating
FROM restaurant
WHERE rating > 4
  AND city_name LIKE '%new york%' COLLATE NOCASE;",,,0,1,0,0,0,4.75,816,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.25
restaurants,sqlite,instruct,SELECT DISTINCT restaurant.city_name FROM restaurant WHERE rating = (SELECT MAX(rating) FROM restaurant);,Which city has the highest-rated restaurant?,"
Follow the instructions below to generate the query:
Match all strings case-insensitively using wildcard operators
","SELECT r.city_name
FROM restaurant r
WHERE r.rating =
    (SELECT MAX(rating)
     FROM restaurant)
LIMIT 1;",,,0,1,0,0,0,6.38,926,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.30
restaurants,sqlite,order_by,"SELECT name, rating FROM restaurant ORDER BY rating DESC NULLS FIRST;SELECT id, rating FROM restaurant ORDER BY rating DESC NULLS FIRST;SELECT name, id, rating FROM restaurant ORDER BY rating DESC NULLS FIRST;",List the restaurants starting from the best ratings to the lowest,,"SELECT *
FROM restaurant
ORDER BY rating DESC;",,,0,1,0,0,0,4.86,569,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.15
restaurants,sqlite,order_by,SELECT restaurant.name FROM restaurant ORDER BY restaurant.rating DESC LIMIT 3;,What are the names of the top 3 restaurants with the highest ratings?,,"SELECT name
FROM restaurant
ORDER BY rating DESC
LIMIT 3;",,,0,1,0,0,0,2.39,449,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.10
restaurants,sqlite,order_by,"SELECT geographic.region, AVG(restaurant.rating) AS average_rating FROM restaurant JOIN geographic ON restaurant.city_name = geographic.city_name GROUP BY geographic.region ORDER BY geographic.region NULLS LAST;",What is the average rating of restaurants in each region? Order the results by the region name.,,"SELECT g.region,
       AVG(r.rating) AS average_rating
FROM restaurant r
JOIN geographic g ON r.city_name = g.city_name
GROUP BY g.region
ORDER BY g.region;",,,0,1,0,0,0,2.65,541,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.14
restaurants,sqlite,order_by,SELECT name FROM restaurant WHERE LOWER(food_type) LIKE LOWER('%Italian%') OR LOWER(city_name) LIKE LOWER('%New York%') ORDER BY name NULLS LAST;,Which restaurants serve Italian cuisine or are located in New York? Order the results by the restaurant name.,,"SELECT name,
       rating,
       food_type,
       city_name
FROM restaurant
WHERE food_type = 'Italian'
  OR city_name = 'New York'
ORDER BY name;",,,0,1,0,0,0,2.99,601,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.16
restaurants,sqlite,order_by,SELECT street_name FROM location GROUP BY street_name ORDER BY COUNT(restaurant_id) DESC NULLS FIRST LIMIT 1;,Which street has the most number of restaurants?,,"SELECT street_name
FROM LOCATION
GROUP BY street_name
ORDER BY COUNT(*) DESC
LIMIT 1;",,,0,1,0,0,0,2.21,579,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.16
restaurants,sqlite,ratio,"SELECT CAST(COUNT(CASE WHEN LOWER(food_type) LIKE LOWER('%Italian%') THEN 1 END) AS REAL) / NULLIF(COUNT(food_type), 0) AS ratio FROM restaurant WHERE LOWER(city_name) LIKE LOWER('%Los Angeles%');",What is the ratio of Italian restaurants out of all restaurants in Los Angeles?,,"SELECT CAST(SUM(CASE
                    WHEN food_type = 'Italian' THEN 1
                    ELSE 0
                END) AS FLOAT) / COUNT(*) AS ratio
FROM restaurant
WHERE city_name = 'Los Angeles';",,,0,1,0,0,0,4.93,670,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.20
restaurants,sqlite,ratio,"SELECT CAST(SUM(CASE WHEN LOWER(restaurant.food_type) LIKE '%vegan%' THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN NOT LOWER(restaurant.food_type) LIKE '%vegan%' THEN 1 ELSE 0 END), 0) AS ratio FROM restaurant WHERE LOWER(LOWER(restaurant.city_name)) LIKE LOWER('%san francisco%');",What is the ratio of restaurants serving vegan food to restaurants serving non-vegan food in San Francisco? Match food_type case insensitively,,"SELECT
  (SELECT COUNT(*) * 1.0
   FROM restaurant
   WHERE LOWER(food_type) = 'vegan'
     AND city_name = 'San Francisco') /
  (SELECT COUNT(*)
   FROM restaurant
   WHERE LOWER(food_type) <> 'vegan'
     AND city_name = 'San Francisco') AS ratio;",,,0,1,0,0,0,3.46,779,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.24
restaurants,sqlite,ratio,"SELECT CAST(COUNT(CASE WHEN rating > 4 THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN rating < 4 THEN 1 END), 0) AS ratio FROM restaurant WHERE LOWER(city_name) LIKE LOWER('New York');",What is the ratio of restaurants with a rating above 4 to restaurants with a rating below 4 in New York?,,"SELECT CAST(SUM(CASE
                    WHEN rating > 4 THEN 1
                    ELSE 0
                END) AS FLOAT) / NULLIF(SUM(CASE
                                                WHEN rating < 4 THEN 1
                                                ELSE 0
                                            END), 0) AS ratio
FROM restaurant
WHERE city_name = 'New York';",,,0,1,0,0,0,3.53,569,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.15
restaurants,sqlite,ratio,"SELECT CAST(SUM(CASE WHEN restaurant.rating > 4.0 THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN restaurant.rating < 4.0 THEN 1 ELSE 0 END), 0) AS ratio FROM restaurant;",What is the ratio of restaurants with a rating above 4.0 to restaurants with a rating below 4.0 overall?,,"SELECT (1.0 *
          (SELECT COUNT(*)
           FROM restaurant
           WHERE rating > 4.0)) /
  (SELECT COUNT(*)
   FROM restaurant
   WHERE rating < 4.0) AS ratio;",,,0,1,0,0,0,6.33,616,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.17
restaurants,sqlite,ratio,"SELECT CAST(COUNT(*) AS REAL) / NULLIF((SELECT COUNT(*) FROM restaurant), 0) AS rating_ratio FROM restaurant WHERE rating > 4.5;",What is the ratio of restaurants with rating > 4.5 to the total number of restaurants in the database.,,"SELECT CAST(SUM(CASE
                    WHEN rating > 4.5 THEN 1
                    ELSE 0
                END) AS REAL) / COUNT(*) AS ratio
FROM restaurant;",,,0,1,0,0,0,2.20,476,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.11
restaurants,sqlite,table_join,"SELECT geographic.region, COUNT(DISTINCT restaurant.id) AS number_of_restaurants FROM geographic JOIN restaurant ON geographic.city_name = restaurant.city_name GROUP BY geographic.region ORDER BY number_of_restaurants DESC NULLS FIRST;SELECT geographic.region, COUNT(DISTINCT restaurant.id) AS number_of_restaurants FROM geographic LEFT JOIN restaurant ON geographic.city_name = restaurant.city_name GROUP BY geographic.region ORDER BY number_of_restaurants DESC NULLS FIRST;",How many restaurants are there in each region?,,"SELECT geographic.region,
       COUNT(*) AS restaurant_count
FROM restaurant
JOIN geographic ON restaurant.city_name = geographic.city_name
GROUP BY geographic.region;",,,0,1,0,0,0,2.44,522,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.13
restaurants,sqlite,table_join,"SELECT geographic.region, COUNT(restaurant.id) AS number_of_restaurants FROM restaurant JOIN geographic ON restaurant.city_name = geographic.city_name WHERE LOWER(restaurant.food_type) LIKE '%italian%' GROUP BY geographic.region ORDER BY number_of_restaurants DESC;",How many restaurants serve Italian food in each region?,,"SELECT g.region,
       COUNT(*) AS num_restaurants
FROM restaurant r
JOIN geographic g ON r.city_name = g.city_name
WHERE r.food_type = 'Italian'
GROUP BY g.region;",,,0,1,0,0,0,2.99,470,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.11
restaurants,sqlite,table_join,"SELECT r.city_name, r.name, COUNT(r.id) AS restaurant_count FROM restaurant AS r GROUP BY r.city_name, r.name HAVING COUNT(r.id) > 1;","What cities have more than one restaurants with the same name, and how many of them are there? Return the city name, restaurant name, and restaurant count",,"SELECT city_name,
       name AS restaurant_name,
       COUNT(*) AS restaurant_count
FROM restaurant
GROUP BY city_name,
         name
HAVING COUNT(*) > 1;",,,0,1,0,0,0,6.21,548,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.14
restaurants,sqlite,table_join,"SELECT geographic.region, AVG(restaurant.rating) AS average_rating FROM geographic JOIN restaurant ON geographic.city_name = restaurant.city_name GROUP BY 1;",What is the average rating of restaurants in each region?,,"SELECT geographic.region,
       AVG(restaurant.rating) AS average_rating
FROM restaurant
JOIN geographic ON restaurant.city_name = geographic.city_name
GROUP BY geographic.region;",,,0,1,0,0,0,4.36,591,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.16
restaurants,sqlite,table_join,"SELECT location.city_name, AVG(restaurant.rating) AS average_rating FROM restaurant JOIN LOCATION ON restaurant.id = location.restaurant_id WHERE LOWER(restaurant.food_type) LIKE '%mexican%' GROUP BY location.city_name;",What is the average rating of restaurants that serve Mexican food in each city?,,"SELECT city_name,
       AVG(rating) AS average_rating
FROM restaurant
WHERE food_type = 'Mexican'
GROUP BY city_name;",,,0,1,0,0,0,2.05,463,,,,"Use the following table aliases when referencing tables in the query:
-- location AS l
-- geographic AS g
-- restaurant AS r
",,,,,,,,False,0.11
scholar,sqlite,group_by,SELECT COUNT(*) AS number_of_authors FROM (SELECT writes.authorid FROM writes GROUP BY writes.authorid HAVING COUNT(writes.paperid) > 2) AS subquery;,How many authors have published more than 2 papers?,,"SELECT COUNT(*) AS num_authors
FROM
  (SELECT authorid
   FROM writes
   GROUP BY authorid
   HAVING COUNT(paperid) > 2) AS authors;",,,0,1,0,0,0,3.48,1108,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.20
scholar,sqlite,group_by,"SELECT paperkeyphrase.paperid, COUNT(paperkeyphrase.keyphraseid) AS keyphrase_count FROM paperkeyphrase GROUP BY paperkeyphrase.paperid ORDER BY keyphrase_count DESC;SELECT p.title, COUNT(pk.keyphraseid) AS num_keyphrases FROM paper AS p JOIN paperkeyphrase AS pk ON p.paperid = pk.paperid GROUP BY p.title ORDER BY num_keyphrases DESC;",How many keyphrases are associated with each paper?,,"SELECT p.paperid,
       COUNT(pk.keyphraseid) AS num_keyphrases
FROM paper p
LEFT JOIN paperkeyphrase pk ON p.paperid = pk.paperid
GROUP BY p.paperid;",,,0,1,0,0,0,2.96,1173,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.23
scholar,sqlite,group_by,"SELECT paperdataset.datasetid, COUNT(DISTINCT paperdataset.paperid) AS total_papers FROM paperdataset GROUP BY paperdataset.datasetid;SELECT dataset.datasetname, COUNT(paperdataset.paperid) AS total_papers FROM paperdataset JOIN dataset ON paperdataset.datasetid = dataset.datasetid GROUP BY dataset.datasetname;",What is the total number of papers associated with each dataset?,,"SELECT d.datasetid,
       d.datasetname,
       COUNT(pd.paperid) AS total_number_of_papers
FROM dataset d
JOIN paperdataset pd ON d.datasetid = pd.datasetid
GROUP BY d.datasetid,
         d.datasetname;",,,0,1,0,0,0,2.35,1058,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.18
scholar,sqlite,group_by,"SELECT paper.year, COUNT(paper.paperid) AS total_papers FROM paper GROUP BY paper.year ORDER BY paper.year NULLS LAST;",What is the total number of papers published in each year?,,"SELECT YEAR,
       COUNT(*) AS total_papers
FROM paper
GROUP BY YEAR;",,,0,1,0,0,0,2.51,957,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.14
scholar,sqlite,group_by,"SELECT paper.year, COUNT(paper.paperid) AS total_papers FROM paper GROUP BY paper.year ORDER BY paper.year NULLS LAST;",What is the total number of papers published per year?,,"SELECT YEAR,
       COUNT(*) AS total_papers
FROM paper
GROUP BY YEAR;",,,0,1,0,0,0,2.27,956,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.14
scholar,sqlite,instruct,SELECT COUNT(DISTINCT writes.authorid) AS number_of_authors FROM writes JOIN paper ON writes.paperid = paper.paperid JOIN journal ON paper.journalid = journal.journalid WHERE LOWER(journal.journalname) LIKE LOWER('%Science%') AND paper.year = 2020;,"How many authors wrote papers that were published in the journal ""Science"" in the year 2020?","
Follow the instructions below to generate the query:
Filter paper names using exact matches.
Filter keyphrases and journal names with case-insensitive matching.
","SELECT COUNT(DISTINCT a.authorid)
FROM paper AS p
JOIN journal AS j ON p.journalid = j.journalid
JOIN writes AS w ON p.paperid = w.paperid
JOIN author AS a ON w.authorid = a.authorid
WHERE p.year = 2020
  AND j.journalname = 'Science' COLLATE NOCASE;",,,0,1,0,0,0,4.47,1440,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.34
scholar,sqlite,instruct,SELECT COUNT(DISTINCT paper.paperid) FROM paper JOIN journal ON paper.journalid = journal.journalid JOIN paperkeyphrase ON paper.paperid = paperkeyphrase.paperid JOIN keyphrase ON paperkeyphrase.keyphraseid = keyphrase.keyphraseid WHERE LOWER(keyphrase.keyphrasename) LIKE LOWER('%machine learning%') AND journal.journalname = 'IEEE Transactions on Pattern Analysis and Machine Intelligence';,"How many papers are associated with the keyphrase ""machine learning"" and were published in the journal named ""IEEE Transactions on Pattern Analysis and Machine Intelligence""?","
Follow the instructions below to generate the query:
Filter paper names, journal names, using exact matches.
Filter keyphrases with case-insensitive matching.
","SELECT COUNT(DISTINCT paper.paperid)
FROM paper
JOIN journal ON paper.journalid = journal.journalid
JOIN paperkeyphrase ON paper.paperid = paperkeyphrase.paperid
JOIN keyphrase ON paperkeyphrase.keyphraseid = keyphrase.keyphraseid
WHERE journal.journalname = 'IEEE Transactions on Pattern Analysis and Machine Intelligence'
  AND lower(keyphrase.keyphrasename) = 'machine learning';",,,0,1,0,0,0,6.77,1396,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.31
scholar,sqlite,instruct,SELECT COUNT(paper.paperid) FROM paper JOIN journal ON paper.journalid = journal.journalid WHERE paper.year = 2020 AND LOWER(journal.journalname) LIKE LOWER('%nature%');,"How many papers were published in the journal ""nature"" in the year 2020?","
Follow the instructions below to generate the query:
Filter strings with case-insensitive matching
","SELECT COUNT(*)
FROM paper
JOIN journal ON paper.journalid = journal.journalid
WHERE paper.year = 2020
  AND journal.journalname = 'nature' COLLATE NOCASE;",,,0,1,0,0,0,4.76,1262,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.26
scholar,sqlite,instruct,SELECT author.authorname FROM author JOIN writes ON author.authorid = writes.authorid JOIN paper ON writes.paperid = paper.paperid WHERE paper.title = 'The Effects of Climate Change on Agriculture';,"What are the names of the authors who wrote the paper with the title ""The Effects of Climate Change on Agriculture""?","
Follow the instructions below to generate the query:
Always filter strings with an exact match
","SELECT DISTINCT author.authorname
FROM author
JOIN writes ON author.authorid = writes.authorid
JOIN paper ON writes.paperid = paper.paperid
WHERE paper.title = ""The Effects of Climate Change on Agriculture"";",,,0,1,0,0,0,2.50,1076,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.18
scholar,sqlite,instruct,"SELECT venue.venuename, COUNT(DISTINCT paper.paperid) FROM paper JOIN venue ON paper.venueid = venue.venueid WHERE paper.venueid = (SELECT venueid FROM paper WHERE paperid = 2) GROUP BY venue.venuename;","What is the name of the venue where the paper with paper ID 2 was published, and how many papers were published in total in that venue?","
Follow the instructions below to generate the query:
Always filter strings using LIKE
","SELECT v.venuename,

  (SELECT COUNT(*)
   FROM paper AS p2
   WHERE p2.venueid = v.venueid) AS total_papers
FROM paper AS p
JOIN venue AS v ON p.venueid = v.venueid
WHERE p.paperid = 2;",,,0,1,0,0,0,6.70,1482,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.36
scholar,sqlite,order_by,"SELECT cite.citingpaperid, COUNT(*) AS citation_count FROM cite GROUP BY cite.citingpaperid ORDER BY citation_count DESC;SELECT p.paperid, p.numciting FROM paper AS p WHERE p.numciting > 0 ORDER BY p.numciting DESC NULLS FIRST;SELECT p.title, COUNT(c.citedpaperid) AS num_cited_papers FROM paper AS p JOIN cite AS c ON p.paperid = c.citingpaperid GROUP BY p.title ORDER BY num_cited_papers DESC NULLS FIRST;","For each paper that cites other papers, how many other papers does it cite? Sort by the number of papers cited in descending order",,"SELECT citingpaperid AS paperid,
       COUNT(citedpaperid) AS num_citations
FROM cite
GROUP BY citingpaperid
ORDER BY num_citations DESC;",,,0,1,0,0,0,3.48,1181,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.23
scholar,sqlite,order_by,SELECT journal.journalname FROM journal ORDER BY LENGTH(journal.journalname) ASC NULLS LAST;,"What are the names of the journals in the database, ordered by the length of the journal name from shortest to longest?",,"SELECT journalname
FROM journal
ORDER BY LENGTH(journalname) ASC;",,,0,1,0,0,0,3.14,966,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.14
scholar,sqlite,order_by,SELECT paper.title FROM paper WHERE paper.year = 2020 ORDER BY paper.title ASC NULLS LAST;,"What are the titles of the papers published in the year 2020, ordered alphabetically?",,"SELECT title
FROM paper
WHERE YEAR = 2020
ORDER BY title ASC;",,,0,1,0,0,0,3.59,962,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.14
scholar,sqlite,order_by,"SELECT paperkeyphrase.paperid, COUNT(paperkeyphrase.keyphraseid) AS total_keyphrases FROM paperkeyphrase GROUP BY paperkeyphrase.paperid ORDER BY paperkeyphrase.paperid ASC NULLS LAST;","What is the total number of keyphrases associated with each paper, ordered by the paper ID in ascending order?",,"SELECT paper.paperid,
       COUNT(paperkeyphrase.keyphraseid) AS total_keyphrases
FROM paper
LEFT JOIN paperkeyphrase ON paper.paperid = paperkeyphrase.paperid
GROUP BY paper.paperid
ORDER BY paper.paperid ASC;",,,0,1,0,0,0,3.26,1131,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.21
scholar,sqlite,order_by,"SELECT paper.paperid, COUNT(DISTINCT writes.authorid) AS num_authors FROM paper JOIN writes ON paper.paperid = writes.paperid GROUP BY paper.paperid ORDER BY num_authors DESC NULLS FIRST;SELECT paper.title, COUNT(DISTINCT writes.authorid) AS num_authors FROM paper JOIN writes ON paper.paperid = writes.paperid GROUP BY paper.title ORDER BY num_authors DESC NULLS FIRST;SELECT paper.paperid, paper.title, COUNT(DISTINCT writes.authorid) AS num_authors FROM paper JOIN writes ON paper.paperid = writes.paperid GROUP BY paper.paperid, paper.title ORDER BY num_authors DESC NULLS FIRST;","Which papers have the highest number of authors, ordered by the number of authors in descending order?",,"SELECT p.paperid,
       p.title,
       COUNT(w.authorid) AS num_authors
FROM paper p
JOIN writes w ON p.paperid = w.paperid
GROUP BY p.paperid,
         p.title
ORDER BY num_authors DESC;",,,0,1,0,0,0,2.55,1065,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.18
scholar,sqlite,ratio,"SELECT CAST(COUNT(CASE WHEN dataset_count > 1 THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN dataset_count = 1 THEN 1 END), 0) AS ratio FROM (SELECT paperdataset.paperid, COUNT(paperdataset.datasetid) AS dataset_count FROM paperdataset GROUP BY paperdataset.paperid) AS subquery;",What is the proportion of papers that belong to more than 1 dataset to papers that belong to 1 dataset?,,"WITH dataset_counts AS
  (SELECT paperid,
          COUNT(datasetid) AS dataset_count
   FROM paperdataset
   GROUP BY paperid)
SELECT 1.0 *
  (SELECT COUNT(*)
   FROM dataset_counts
   WHERE dataset_count > 1) /
  (SELECT COUNT(*)
   FROM dataset_counts
   WHERE dataset_count = 1) AS proportion;",,,0,1,0,0,0,3.42,1278,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.27
scholar,sqlite,ratio,"SELECT CAST(COUNT(DISTINCT CASE WHEN paper_count >= 3 THEN subquery.authorid END) AS REAL) / NULLIF(COUNT(DISTINCT CASE WHEN paper_count < 3 THEN subquery.authorid END), 0) AS ratio FROM (SELECT writes.authorid, COUNT(writes.paperid) AS paper_count FROM writes GROUP BY writes.authorid) AS subquery;",What is the ratio of authors who have written 3 or more papers to authors who have written less than 3 papers?,,"WITH author_counts AS
  (SELECT authorid,
          COUNT(*) AS paper_count
   FROM writes
   GROUP BY authorid)
SELECT 1.0 *
  (SELECT COUNT(*)
   FROM author_counts
   WHERE paper_count >= 3) /
  (SELECT COUNT(*)
   FROM author_counts
   WHERE paper_count < 3) AS ratio;",,,0,1,0,0,0,5.44,1275,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.27
scholar,sqlite,ratio,"SELECT CAST(COUNT(CASE WHEN paper.year = 2020 THEN 1 END) AS REAL) / NULLIF(COUNT(paper.paperid), 0) AS ratio FROM paper;",What is the ratio of papers published in the year 2020 to the total number of papers in the database?,,"SELECT 1.0 *
  (SELECT COUNT(*)
   FROM paper
   WHERE YEAR = 2020) /
  (SELECT COUNT(*)
   FROM paper) AS ratio;",,,0,1,0,0,0,3.03,1109,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.20
scholar,sqlite,ratio,"SELECT CAST(COUNT(CASE WHEN paper.numcitedby > 1 THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN paper.numcitedby < 2 THEN 1 END), 0) AS ratio FROM paper;",What is the ratio of papers that have been cited by 2 or more papers to papers that have been cited by less than 2 papers?,,"SELECT 1.0 *
  (SELECT COUNT(*)
   FROM paper
   WHERE numcitedby >= 2) /
  (SELECT COUNT(*)
   FROM paper
   WHERE numcitedby < 2) AS ratio;",,,0,1,0,0,0,4.37,1256,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.26
scholar,sqlite,ratio,"SELECT CAST(COUNT(DISTINCT CASE WHEN keyphrase_count > 1 THEN subquery.paperid END) AS REAL) / NULLIF(COUNT(DISTINCT CASE WHEN keyphrase_count = 1 THEN subquery.paperid END), 0) AS ratio FROM (SELECT paperkeyphrase.paperid, COUNT(paperkeyphrase.keyphraseid) AS keyphrase_count FROM paperkeyphrase GROUP BY paperkeyphrase.paperid) AS subquery;",What is the ratio of papers that have more than 1 keyphrases to papers that have 1 keyphrase?,,"WITH kp_counts AS
  (SELECT paperid,
          COUNT(keyphraseid) AS count_keyphrases
   FROM paperkeyphrase
   GROUP BY paperid)
SELECT 1.0 *
  (SELECT COUNT(*)
   FROM kp_counts
   WHERE count_keyphrases > 1) /
  (SELECT COUNT(*)
   FROM kp_counts
   WHERE count_keyphrases = 1) AS ratio;",,,0,1,0,0,0,3.60,1159,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.22
scholar,sqlite,table_join,"SELECT paperdataset.paperid, COUNT(cite.citedpaperid) AS citation_count FROM paperdataset JOIN cite ON paperdataset.paperid = cite.citedpaperid WHERE paperdataset.datasetid = (SELECT datasetid FROM dataset WHERE LOWER(datasetname) LIKE LOWER('%COVID-19 Research%')) GROUP BY paperdataset.paperid ORDER BY citation_count DESC NULLS FIRST;SELECT p.title, COUNT(c.citingpaperid) AS num_citing_papers FROM paper AS p JOIN paperdataset AS pd ON p.paperid = pd.paperid JOIN cite AS c ON p.paperid = c.citedpaperid JOIN dataset AS d ON pd.datasetid = d.datasetid WHERE d.datasetname = 'COVID-19 Research' GROUP BY p.title ORDER BY num_citing_papers DESC;","How many papers cite each paper in the dataset named ""COVID-19 Research""?",,"SELECT p.paperid,
       COUNT(c.citingpaperid) AS citations
FROM paper p
JOIN paperdataset pd ON p.paperid = pd.paperid
JOIN dataset d ON pd.datasetid = d.datasetid
LEFT JOIN cite c ON p.paperid = c.citedpaperid
WHERE d.datasetname = 'COVID-19 Research'
GROUP BY p.paperid;",,,0,1,0,0,0,7.01,1344,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.30
scholar,sqlite,table_join,"SELECT journal.journalname, COUNT(DISTINCT paper.paperid) AS total_papers FROM paper JOIN journal ON paper.journalid = journal.journalid GROUP BY journal.journalname ORDER BY journal.journalname NULLS LAST;","What is the total number of papers published in each journal, ordered by the journal name?",,"SELECT journal.journalname,
       COUNT(paper.paperid) AS total_papers
FROM journal
LEFT JOIN paper ON journal.journalid = paper.journalid
GROUP BY journal.journalname
ORDER BY journal.journalname;",,,0,1,0,0,0,2.92,1122,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.21
scholar,sqlite,table_join,SELECT COUNT(DISTINCT paperkeyphrase.keyphraseid) AS total_keyphrases FROM paper JOIN journal ON paper.journalid = journal.journalid JOIN paperkeyphrase ON paper.paperid = paperkeyphrase.paperid WHERE LOWER(journal.journalname) LIKE LOWER('%IEEE Transactions%');,"What is the total number of unique keyphrases associated with papers published in the journal with ""IEEE Transactions"" in its name?",,"SELECT COUNT(DISTINCT pkp.keyphraseid) AS unique_keyphrase_count
FROM paper p
JOIN journal j ON p.journalid = j.journalid
JOIN paperkeyphrase pkp ON p.paperid = pkp.paperid
WHERE j.journalname LIKE '%IEEE Transactions%';",,,0,1,0,0,0,4.52,1272,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.27
scholar,sqlite,table_join,"SELECT author.authorname, COUNT(DISTINCT writes.paperid) AS number_of_papers FROM author JOIN writes ON author.authorid = writes.authorid GROUP BY author.authorname ORDER BY number_of_papers DESC;SELECT author.authorid, COUNT(DISTINCT writes.paperid) AS number_of_papers FROM author JOIN writes ON author.authorid = writes.authorid GROUP BY author.authorid ORDER BY number_of_papers DESC;SELECT author.authorname, author.authorid, COUNT(DISTINCT writes.paperid) AS number_of_papers FROM author JOIN writes ON author.authorid = writes.authorid GROUP BY author.authorname, author.authorid ORDER BY number_of_papers DESC;","Which authors have published the most papers, ordered by the number of papers they have published in descending order?",,"SELECT author.authorname,
       COUNT(writes.paperid) AS paper_count
FROM author
JOIN writes ON author.authorid = writes.authorid
GROUP BY author.authorid
ORDER BY paper_count DESC;",,,0,1,0,0,0,2.85,1130,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.21
scholar,sqlite,table_join,"SELECT paper.title FROM paper JOIN paperkeyphrase ON paper.paperid = paperkeyphrase.paperid JOIN keyphrase ON paperkeyphrase.keyphraseid = keyphrase.keyphraseid WHERE LOWER(keyphrase.keyphrasename) LIKE LOWER('%Machine Learning%');SELECT paper.paperid FROM paper JOIN paperkeyphrase ON paper.paperid = paperkeyphrase.paperid JOIN keyphrase ON paperkeyphrase.keyphraseid = keyphrase.keyphraseid WHERE LOWER(keyphrase.keyphrasename) LIKE LOWER('%Machine Learning%');SELECT paper.title, paper.paperid FROM paper JOIN paperkeyphrase ON paper.paperid = paperkeyphrase.paperid JOIN keyphrase ON paperkeyphrase.keyphraseid = keyphrase.keyphraseid WHERE LOWER(keyphrase.keyphrasename) LIKE LOWER('%Machine Learning%');","Which papers are associated with the keyphrase ""Machine Learning""?",,"SELECT p.paperid,
       p.title
FROM paper p
JOIN paperkeyphrase pk ON p.paperid = pk.paperid
JOIN keyphrase kp ON pk.keyphraseid = kp.keyphraseid
WHERE kp.keyphrasename = 'Machine Learning';",,,0,1,0,0,0,3.68,1183,,,,"Use the following table aliases when referencing tables in the query:
-- cite AS c
-- field AS f
-- paper AS p
-- venue AS v
-- author AS a
-- writes AS w
-- dataset AS d
-- journal AS j
-- keyphrase AS k
-- paperfield AS pa
-- paperdataset AS pap
-- paperkeyphrase AS p2
",,,,,,,,False,0.23
yelp,sqlite,date_functions,SELECT COUNT(DISTINCT MONTH) AS num_months FROM review WHERE YEAR = 2021 AND CASE MONTH WHEN 'January' THEN 1 WHEN 'February' THEN 2 WHEN 'March' THEN 3 WHEN 'April' THEN 4 WHEN 'May' THEN 5 WHEN 'June' THEN 6 WHEN 'July' THEN 7 WHEN 'August' THEN 8 WHEN 'September' THEN 9 WHEN 'October' THEN 10 WHEN 'November' THEN 11 WHEN 'December' THEN 12 END BETWEEN 6 AND 12;,How many months between June 2021 and December 2021 had reviews?,,"SELECT COUNT(DISTINCT MONTH) AS months_with_reviews
FROM review
WHERE YEAR = 2021
  AND MONTH IN ('June',
                'July',
                'August',
                'September',
                'October',
                'November',
                'December');",,,0,1,0,0,0,3.05,1190,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.26
yelp,sqlite,date_functions,"SELECT COUNT(*) AS review_count FROM review WHERE DATE (CAST(review.year AS TEXT) || '-' || CASE review.month WHEN 'January' THEN '01' WHEN 'February' THEN '02' WHEN 'March' THEN '03' WHEN 'April' THEN '04' WHEN 'May' THEN '05' WHEN 'June' THEN '06' WHEN 'July' THEN '07' WHEN 'August' THEN '08' WHEN 'September' THEN '09' WHEN 'October' THEN '10' WHEN 'November' THEN '11' WHEN 'December' THEN '12' END || '-01') = (SELECT DATE (CAST(r.year AS TEXT) || '-' || CASE r.month WHEN 'January' THEN '01' WHEN 'February' THEN '02' WHEN 'March' THEN '03' WHEN 'April' THEN '04' WHEN 'May' THEN '05' WHEN 'June' THEN '06' WHEN 'July' THEN '07' WHEN 'August' THEN '08' WHEN 'September' THEN '09' WHEN 'October' THEN '10' WHEN 'November' THEN '11' WHEN 'December' THEN '12' END || '-01', '-2 months') FROM review AS r WHERE r.rid = 3);",How many reviews were there 2 months before the review with id 3?,,"WITH base AS
  (SELECT YEAR AS base_year,
                  CASE MONTH
                      WHEN 'January' THEN 1
                      WHEN 'February' THEN 2
                      WHEN 'March' THEN 3
                      WHEN 'April' THEN 4
                      WHEN 'May' THEN 5
                      WHEN 'June' THEN 6
                      WHEN 'July' THEN 7
                      WHEN 'August' THEN 8
                      WHEN 'September' THEN 9
                      WHEN 'October' THEN 10
                      WHEN 'November' THEN 11
                      WHEN 'December' THEN 12
                  END AS base_month
   FROM review
   WHERE rid = 3),
     target AS
  (SELECT CASE
              WHEN base_month > 2 THEN base_year
              ELSE base_year - 1
          END AS target_year,
          CASE
              WHEN base_month > 2 THEN base_month - 2
              ELSE 12 + base_month - 2
          END AS target_month
   FROM base)
SELECT COUNT(*) AS review_count
FROM review,
     target
WHERE review.year = target.target_year
  AND (CASE review.month
           WHEN 'January' THEN 1
           WHEN 'February' THEN 2
           WHEN 'March' THEN 3
           WHEN 'April' THEN 4
           WHEN 'May' THEN 5
           WHEN 'June' THEN 6
           WHEN 'July' THEN 7
           WHEN 'August' THEN 8
           WHEN 'September' THEN 9
           WHEN 'October' THEN 10
           WHEN 'November' THEN 11
           WHEN 'December' THEN 12
       END) = target.target_month;",,,0,1,0,0,0,7.62,2081,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.65
yelp,sqlite,date_functions,"SELECT COUNT(*) AS review_count FROM review AS r JOIN business AS b ON r.business_id = b.business_id WHERE b.state = 'CA' AND ((r.year * 12 + CASE r.month WHEN 'January' THEN 1 WHEN 'February' THEN 2 WHEN 'March' THEN 3 WHEN 'April' THEN 4 WHEN 'May' THEN 5 WHEN 'June' THEN 6 WHEN 'July' THEN 7 WHEN 'August' THEN 8 WHEN 'September' THEN 9 WHEN 'October' THEN 10 WHEN 'November' THEN 11 WHEN 'December' THEN 12 END) >= ((CAST(strftime('%Y', 'now') AS INTEGER) * 12 + CAST(strftime('%m', 'now') AS INTEGER)) - 10));",How many reviews were written for businesses located in California in the last 10 months?,,"SELECT COUNT(*) AS review_count
FROM review r
JOIN business b ON r.business_id = b.business_id
WHERE b.state = 'CA'
  AND date(r.year || '-' || CASE r.month
                                WHEN 'January' THEN '01'
                                WHEN 'February' THEN '02'
                                WHEN 'March' THEN '03'
                                WHEN 'April' THEN '04'
                                WHEN 'May' THEN '05'
                                WHEN 'June' THEN '06'
                                WHEN 'July' THEN '07'
                                WHEN 'August' THEN '08'
                                WHEN 'September' THEN '09'
                                WHEN 'October' THEN '10'
                                WHEN 'November' THEN '11'
                                WHEN 'December' THEN '12'
                            END || '-01') >= date('now', '-10 months');",,,0,1,0,0,0,7.53,1762,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.51
yelp,sqlite,date_functions,"SELECT SUM(COUNT) AS total_checkins FROM checkin WHERE DAY IN ('Thursday', 'Friday');",What is the total number of check-ins on the 2 days before Saturday?,,"SELECT SUM(COUNT) AS total_check_ins
FROM checkin
WHERE DAY IN ('Thursday',
              'Friday');",,,0,1,0,0,0,4.09,1293,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.30
yelp,sqlite,date_functions,SELECT text AS message FROM tip WHERE LOWER(MONTH) LIKE LOWER('%May%') AND YEAR = 2021 LIMIT 1;,What was the message that came with the tip made exactly 2 months after March 2021?,,"SELECT text
FROM tip
WHERE YEAR = 2021
  AND MONTH = 'May';",,,0,1,0,0,0,2.73,1167,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.24
yelp,sqlite,group_by,"SELECT checkin.day, SUM(checkin.count) AS total_checkins FROM checkin GROUP BY checkin.day ORDER BY total_checkins DESC;",How many check-ins occurred on each day of the week?,,"SELECT DAY,
       SUM(COUNT) AS total_checkins
FROM checkin
GROUP BY DAY;",,,0,1,0,0,0,2.13,967,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.16
yelp,sqlite,group_by,"SELECT business.name, AVG(review.rating) AS average_rating FROM business JOIN review ON business.business_id = review.business_id WHERE LOWER(business.city) LIKE LOWER('%NEW YORK%') GROUP BY business.name;",Return the name and average rating for each business in new york,,"SELECT b.name,
       AVG(r.rating) AS avg_rating
FROM business b
JOIN review r ON b.business_id = r.business_id
WHERE b.city = 'New York'
GROUP BY b.name;",,,0,1,0,0,0,3.99,1180,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.25
yelp,sqlite,group_by,"SELECT checkin.business_id, SUM(checkin.count) AS total_checkins FROM checkin GROUP BY checkin.business_id ORDER BY total_checkins DESC;",What is the total count of check-ins for each business id?,,"SELECT business_id,
       SUM(COUNT) AS total_count
FROM checkin
GROUP BY business_id;",,,0,1,0,0,0,2.70,904,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.13
yelp,sqlite,group_by,"SELECT checkin.day, SUM(checkin.count) AS total_checkins FROM checkin WHERE checkin.business_id = 'abc123' GROUP BY checkin.day ORDER BY total_checkins DESC;","What is the total number of check-ins for each day of the week for the business with ID ""abc123""?",,"SELECT DAY,
       SUM(COUNT) AS total_checkins
FROM checkin
WHERE business_id = 'abc123'
GROUP BY DAY;",,,0,1,0,0,0,4.38,1049,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.19
yelp,sqlite,group_by,"SELECT neighbourhood.neighbourhood_name, COUNT(DISTINCT neighbourhood.business_id) AS business_count FROM neighbourhood GROUP BY neighbourhood.neighbourhood_name ORDER BY business_count DESC;SELECT neighbourhood.id, COUNT(DISTINCT neighbourhood.business_id) AS business_count FROM neighbourhood GROUP BY neighbourhood.id ORDER BY business_count DESC;SELECT neighbourhood.neighbourhood_name, neighbourhood.id, COUNT(DISTINCT neighbourhood.business_id) AS business_count FROM neighbourhood GROUP BY neighbourhood.neighbourhood_name, neighbourhood.id ORDER BY business_count DESC;","Which neighbourhoods have the highest number of businesses, and how many businesses are located in each neighbourhood?",,"SELECT neighbourhood_name,
       COUNT(business_id) AS business_count
FROM neighbourhood
GROUP BY neighbourhood_name
ORDER BY business_count DESC;",,,0,1,0,0,0,2.75,1046,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.19
yelp,sqlite,instruct,SELECT SUM(checkin.count) AS total_checkins FROM business JOIN checkin ON business.business_id = checkin.business_id WHERE business.state = 'CA' AND LOWER(checkin.day) LIKE LOWER('%Monday%');,How many check-ins occurred on Mondays at businesses in the state of California?,"
Follow the instructions below to generate the query:
Filter strings of users, city, address, business.name using LIKE with wildcards.
Filter strings of state using exact upper case matches.
Assume the rating of a business to be its average rating, and compute it before computing other aggregates on it.

","SELECT SUM(c.count) AS total_checkins
FROM checkin AS c
JOIN business AS b ON b.business_id = c.business_id
WHERE c.day LIKE '%Monday%'
  AND b.state = 'CA';",,,0,1,0,0,0,5.02,1565,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.40
yelp,sqlite,instruct,SELECT COUNT(*) FROM review JOIN users ON review.user_id = users.user_id WHERE LOWER(users.name) LIKE LOWER('%Sarah Williams%') AND review.month = 'April' AND review.year = 2021;,"How many reviews were posted by users with the name ""Sarah Williams"" in the month of April 2021?","
Follow the instructions below to generate the query:
Filter strings of users, city, address, business.name using LIKE with wildcards.
Filter strings of state using exact upper case matches.
Assume the rating of a business to be its average rating, and compute it before computing other aggregates on it.

","SELECT COUNT(*) AS review_count
FROM review
JOIN users ON review.user_id = users.user_id
WHERE users.name LIKE '%Sarah Williams%'
  AND review.month LIKE '%April%'
  AND review.year = 2021;",,,0,1,0,0,0,6.43,1511,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.37
yelp,sqlite,instruct,"SELECT review.business_id, COUNT(*) AS review_count FROM review WHERE review.year = 2021 GROUP BY review.business_id ORDER BY review_count DESC;",How many reviews were posted for each business id in the year 2021?,"
Follow the instructions below to generate the query:
Filter strings of users, city, address, business.name using LIKE with wildcards.
Filter strings of state using exact upper case matches.
Assume the rating of a business to be its average rating, and compute it before computing other aggregates on it.

","WITH computed_reviews AS
  (SELECT business_id,
          AVG(rating) AS avg_rating, -- compute the business rating as the average rating
 COUNT(*) AS review_count
   FROM review
   WHERE YEAR = 2021
   GROUP BY business_id)
SELECT business_id,
       review_count
FROM computed_reviews;",,,0,1,0,0,0,13.50,2680,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.89
yelp,sqlite,instruct,"SELECT AVG(sf.average_rating) AS sf_average_rating FROM (SELECT business.business_id, AVG(review.rating) AS average_rating FROM business JOIN review ON business.business_id = review.business_id WHERE LOWER(LOWER(business.city)) LIKE LOWER('%san francisco%') GROUP BY business.business_id) AS sf;",What is the average rating of businesses in the city of San Francisco?,"
Follow the instructions below to generate the query:
Filter strings of users, city, address, business.name using LIKE with wildcards.
Filter strings of state using exact upper case matches.
The rating of businesses in a city refers to the average rating of the businesses in that city.
I.e., you must compute the average rating of each business before computing the average rating of businesses in the city.

","SELECT AVG(business_avg) AS average_rating
FROM
  (SELECT AVG(r.rating) AS business_avg
   FROM review r
   JOIN business b ON r.business_id = b.business_id
   WHERE b.city LIKE '%San Francisco%'
   GROUP BY b.business_id);",,,0,1,0,0,0,12.71,1276,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.27
yelp,sqlite,instruct,SELECT COUNT(review.rid) AS total_reviews FROM review JOIN category ON review.business_id = category.business_id WHERE review.year = 2021 AND LOWER(category.category_name) LIKE LOWER('%Cafe%');,"What is the total number of reviews posted in the year 2021 for businesses in the category ""Cafe""?","
Follow the instructions below to generate the query:
Filter strings of users, city, address, business.name using LIKE with wildcards.
Filter strings of state using exact upper case matches.
Assume the rating of a business to be its average rating, and compute it before computing other aggregates on it.

","WITH avg_business_rating AS
  (SELECT business_id,
          AVG(rating) AS avg_rating
   FROM review
   GROUP BY business_id)
SELECT COUNT(r.rid) AS total_reviews
FROM review r
JOIN business b ON r.business_id = b.business_id
JOIN category c ON b.business_id = c.business_id
JOIN avg_business_rating abr ON b.business_id = abr.business_id
WHERE r.year = 2021
  AND c.category_name LIKE '%Cafe%' ;",,,0,1,0,0,0,10.91,2332,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.74
yelp,sqlite,order_by,"SELECT review.month, COUNT(review.rid) AS review_count FROM review WHERE review.year = 2021 GROUP BY review.month ORDER BY CASE review.month WHEN 'January' THEN 1 WHEN 'February' THEN 2 WHEN 'March' THEN 3 WHEN 'April' THEN 4 WHEN 'May' THEN 5 WHEN 'June' THEN 6 WHEN 'July' THEN 7 WHEN 'August' THEN 8 WHEN 'September' THEN 9 WHEN 'October' THEN 10 WHEN 'November' THEN 11 WHEN 'December' THEN 12 END;","How many reviews were posted in each month of the year 2021, ordered by the month?",,"SELECT MONTH,
       COUNT(*) AS review_count
FROM review
WHERE YEAR = 2021
GROUP BY MONTH
ORDER BY CASE MONTH
             WHEN 'January' THEN 1
             WHEN 'February' THEN 2
             WHEN 'March' THEN 3
             WHEN 'April' THEN 4
             WHEN 'May' THEN 5
             WHEN 'June' THEN 6
             WHEN 'July' THEN 7
             WHEN 'August' THEN 8
             WHEN 'September' THEN 9
             WHEN 'October' THEN 10
             WHEN 'November' THEN 11
             WHEN 'December' THEN 12
         END;",,,0,1,0,0,0,5.35,1224,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.27
yelp,sqlite,order_by,"SELECT business.name, AVG(review.rating) AS average_rating FROM business JOIN review ON business.business_id = review.business_id WHERE LOWER(business.city) LIKE LOWER('%New York%') GROUP BY business.name, business.business_id ORDER BY average_rating DESC;",Please provide a list of business names in New York and their average ratings ordered by the highest average rating first.,,"SELECT b.name,
       AVG(r.rating) AS average_rating
FROM business AS b
JOIN review AS r ON b.business_id = r.business_id
WHERE b.state = 'NY'
GROUP BY b.name
ORDER BY average_rating DESC;",,,0,1,0,0,0,4.52,1246,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.28
yelp,sqlite,order_by,SELECT business.name FROM business ORDER BY business.name ASC NULLS LAST;,"What are the names of the businesses in the database, ordered alphabetically?",,"SELECT name
FROM business
ORDER BY name ASC;",,,0,1,0,0,0,2.68,1023,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.18
yelp,sqlite,order_by,"SELECT business.name, business.review_count FROM business ORDER BY business.review_count DESC LIMIT 3;SELECT business.business_id, business.review_count FROM business ORDER BY business.review_count DESC LIMIT 3;SELECT business.bid, business.review_count FROM business ORDER BY business.review_count DESC LIMIT 3;SELECT business.name, business.business_id, business.review_count FROM business ORDER BY business.review_count DESC LIMIT 3;SELECT business.name, business.bid, business.review_count FROM business ORDER BY business.review_count DESC LIMIT 3;SELECT business.business_id, business.bid, business.review_count FROM business ORDER BY business.review_count DESC LIMIT 3;SELECT business.name, business.business_id, business.bid, business.review_count FROM business ORDER BY business.review_count DESC LIMIT 3;",What are the top 3 businesses in terms of review count?,,"SELECT name,
       review_count
FROM business
ORDER BY review_count DESC
LIMIT 3;",,,0,1,0,0,0,3.58,967,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.16
yelp,sqlite,order_by,"SELECT business.latitude, business.longitude FROM business JOIN review ON business.business_id = review.business_id GROUP BY business.business_id, business.latitude, business.longitude ORDER BY AVG(review.rating) DESC NULLS FIRST LIMIT 1;",What is the latitude and longitude of the business with the highest rating?,,"SELECT b.latitude,
       b.longitude
FROM business b
WHERE b.business_id =
    (SELECT r.business_id
     FROM review r
     GROUP BY r.business_id
     ORDER BY AVG(r.rating) DESC
     LIMIT 1);",,,0,1,0,0,0,5.23,1383,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.34
yelp,sqlite,ratio,"SELECT category.category_name, CAST(COUNT(CASE WHEN review.rating > 3 THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN review.rating < 3 THEN 1 END), 0) AS ratio FROM review JOIN category ON review.business_id = category.business_id GROUP BY category.category_name ORDER BY ratio DESC;SELECT category.id, CAST(COUNT(CASE WHEN review.rating > 3 THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN review.rating < 3 THEN 1 END), 0) AS ratio FROM review JOIN category ON review.business_id = category.business_id GROUP BY category.id ORDER BY ratio DESC;SELECT category.category_name, category.id, CAST(COUNT(CASE WHEN review.rating > 3 THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN review.rating < 3 THEN 1 END), 0) AS ratio FROM review JOIN category ON review.business_id = category.business_id GROUP BY category.category_name, category.id ORDER BY ratio DESC;","How does the ratio of positive reviews (rating > 3) to negative reviews (rating < 3) vary across different categories of businesses, ordered by descending ratio?",,"SELECT c.category_name,
       CAST(SUM(CASE
                    WHEN r.rating > 3 THEN 1
                    ELSE 0
                END) AS FLOAT) / NULLIF(SUM(CASE
                                                WHEN r.rating < 3 THEN 1
                                                ELSE 0
                                            END), 0) AS ratio
FROM review r
JOIN category c ON r.business_id = c.business_id
GROUP BY c.category_name
ORDER BY ratio DESC;",,,0,1,0,0,0,4.40,1117,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.22
yelp,sqlite,ratio,"SELECT CAST(COUNT(CASE WHEN business.state = 'CA' THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN business.state = 'NY' THEN 1 END), 0) AS ratio FROM business;",What is the ratio of businesses in the state of California to businesses in the state of New York?,,"SELECT 1.0 *
  (SELECT COUNT(*)
   FROM business
   WHERE state = 'CA') /
  (SELECT COUNT(*)
   FROM business
   WHERE state = 'NY') AS ratio;",,,0,1,0,0,0,3.54,1057,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.20
yelp,sqlite,ratio,"SELECT CAST(SUM(CASE WHEN checkin.day IN ('Saturday', 'Sunday') THEN checkin.count ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN NOT checkin.day IN ('Saturday', 'Sunday') THEN checkin.count ELSE 0 END), 0) AS ratio FROM checkin JOIN business ON checkin.business_id = business.business_id WHERE LOWER(business.name) LIKE LOWER('%Mark''s Bistro%');","What is the ratio of check-ins on weekends to check-ins on weekdays for the business named ""Mark's Bistro""?",,"SELECT CAST(weekend_checkins AS FLOAT) / NULLIF(weekday_checkins, 0) AS ratio
FROM
  (SELECT SUM(CASE
                  WHEN DAY IN ('Saturday', 'Sunday') THEN COUNT
                  ELSE 0
              END) AS weekend_checkins,
          SUM(CASE
                  WHEN DAY NOT IN ('Saturday', 'Sunday') THEN COUNT
                  ELSE 0
              END) AS weekday_checkins
   FROM checkin
   JOIN business ON checkin.business_id = business.business_id
   WHERE business.name = 'Mark''s Bistro') AS sub;",,,0,1,0,0,0,6.07,1394,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.34
yelp,sqlite,ratio,"SELECT CAST(SUM(CASE WHEN business.is_open = 1 THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN business.is_open = 0 THEN 1 ELSE 0 END), 0) AS ratio FROM business WHERE LOWER(LOWER(business.city)) LIKE LOWER('%san francisco%');",What is the ratio of open businesses to closed businesses in the city of San Francisco?,,"SELECT (SUM(CASE
                WHEN is_open = 1 THEN 1
                ELSE 0
            END) * 1.0) / NULLIF(SUM(CASE
                                         WHEN is_open = 0 THEN 1
                                         ELSE 0
                                     END), 0) AS ratio
FROM business
WHERE city = 'San Francisco';",,,0,1,0,0,0,3.38,1144,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.23
yelp,sqlite,ratio,"SELECT business.state, COUNT(business.business_id) / NULLIF(CAST((SELECT COUNT(*) FROM business) AS REAL), 0) AS ratio FROM business GROUP BY business.state;",What is the ratio of the number of businesses in each state to the total number of businesses in the database?,,"SELECT state,
       COUNT(*) * 1.0 /
  (SELECT COUNT(*)
   FROM business) AS ratio
FROM business
GROUP BY state;",,,0,1,0,0,0,4.01,1116,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.22
yelp,sqlite,table_join,"SELECT category.category_name FROM (SELECT business.business_id, AVG(review.rating) AS average_rating FROM business JOIN review ON business.business_id = review.business_id GROUP BY business.business_id) AS business_rating JOIN category ON business_rating.business_id = category.business_id GROUP BY category.category_name ORDER BY AVG(business_rating.average_rating) DESC LIMIT 2;SELECT category.id FROM (SELECT business.business_id, AVG(review.rating) AS average_rating FROM business JOIN review ON business.business_id = review.business_id GROUP BY business.business_id) AS business_rating JOIN category ON business_rating.business_id = category.business_id GROUP BY category.id ORDER BY AVG(business_rating.average_rating) DESC LIMIT 2;SELECT category.category_name, category.id FROM (SELECT business.business_id, AVG(review.rating) AS average_rating FROM business JOIN review ON business.business_id = review.business_id GROUP BY business.business_id) AS business_rating JOIN category ON business_rating.business_id = category.business_id GROUP BY category.category_name, category.id ORDER BY AVG(business_rating.average_rating) DESC LIMIT 2;",What are the top 2 categories of businesses with the highest average rating?,,"SELECT c.category_name,
       AVG(r.rating) AS average_rating
FROM review r
JOIN category c ON r.business_id = c.business_id
GROUP BY c.category_name
ORDER BY average_rating DESC
LIMIT 2;",,,0,1,0,0,0,5.41,1255,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.28
yelp,sqlite,table_join,"SELECT business.business_id, SUM(checkin.count) AS total_checkins FROM business JOIN checkin ON business.business_id = checkin.business_id WHERE business.state = 'CA' GROUP BY business.business_id ORDER BY total_checkins DESC;SELECT business.name, SUM(checkin.count) AS total_checkins FROM business JOIN checkin ON business.business_id = checkin.business_id WHERE business.state = 'CA' GROUP BY business.name ORDER BY total_checkins DESC;SELECT business.bid, SUM(checkin.count) AS total_checkins FROM business JOIN checkin ON business.business_id = checkin.business_id WHERE business.state = 'CA' GROUP BY business.bid ORDER BY total_checkins DESC;SELECT business.business_id, business.name, SUM(checkin.count) AS total_checkins FROM business JOIN checkin ON business.business_id = checkin.business_id WHERE business.state = 'CA' GROUP BY business.business_id, business.name ORDER BY total_checkins DESC;SELECT business.business_id, business.bid, SUM(checkin.count) AS total_checkins FROM business JOIN checkin ON business.business_id = checkin.business_id WHERE business.state = 'CA' GROUP BY business.business_id, business.bid ORDER BY total_checkins DESC;SELECT business.name, business.bid, SUM(checkin.count) AS total_checkins FROM business JOIN checkin ON business.business_id = checkin.business_id WHERE business.state = 'CA' GROUP BY business.name, business.bid ORDER BY total_checkins DESC;SELECT business.business_id, business.name, business.bid, SUM(checkin.count) AS total_checkins FROM business JOIN checkin ON business.business_id = checkin.business_id WHERE business.state = 'CA' GROUP BY business.business_id, business.name, business.bid ORDER BY total_checkins DESC;",What is the total number of check-ins for each business in the state of California?,,"SELECT b.name,
       SUM(c.count) AS total_checkins
FROM business AS b
JOIN checkin AS c ON b.business_id = c.business_id
WHERE b.state = 'CA'
GROUP BY b.business_id,
         b.name;",,,0,1,0,0,0,4.32,1192,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.26
yelp,sqlite,table_join,"SELECT category.category_name, SUM(business.review_count) AS total_reviews FROM business JOIN category ON business.business_id = category.business_id GROUP BY category.category_name ORDER BY total_reviews DESC;SELECT category.id, SUM(business.review_count) AS total_reviews FROM business JOIN category ON business.business_id = category.business_id GROUP BY category.id ORDER BY total_reviews DESC;SELECT category.category_name, category.id, SUM(business.review_count) AS total_reviews FROM business JOIN category ON business.business_id = category.business_id GROUP BY category.category_name, category.id ORDER BY total_reviews DESC;",What is the total number of reviews for each business category?,,"SELECT category.category_name,
       COUNT(review.rid) AS total_reviews
FROM review
JOIN category ON review.business_id = category.business_id
GROUP BY category.category_name;",,,0,1,0,0,0,4.15,1049,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.19
yelp,sqlite,table_join,"SELECT category.category_name, SUM(business.review_count) AS total_reviews FROM business JOIN category ON business.business_id = category.business_id WHERE business.state = 'CA' GROUP BY category.category_name ORDER BY total_reviews DESC;SELECT category.id, SUM(business.review_count) AS total_reviews FROM business JOIN category ON business.business_id = category.business_id WHERE business.state = 'CA' GROUP BY category.id ORDER BY total_reviews DESC;SELECT category.category_name, category.id, SUM(business.review_count) AS total_reviews FROM business JOIN category ON business.business_id = category.business_id WHERE business.state = 'CA' GROUP BY category.category_name, category.id ORDER BY total_reviews DESC;","What is the total number of reviews for each category in the state of ""California""?",,"SELECT c.category_name,
       SUM(b.review_count) AS total_reviews
FROM business b
JOIN category c ON b.business_id = c.business_id
WHERE b.state = 'CA'
GROUP BY c.category_name;",,,0,1,0,0,0,5.32,1638,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.45
yelp,sqlite,table_join,"SELECT users.name, COUNT(review.rid) AS review_count FROM review JOIN neighbourhood ON review.business_id = neighbourhood.business_id JOIN users ON review.user_id = users.user_id WHERE LOWER(neighbourhood.neighbourhood_name) LIKE LOWER('%Downtown%') GROUP BY users.name ORDER BY review_count DESC;SELECT users.user_id, COUNT(review.rid) AS review_count FROM review JOIN neighbourhood ON review.business_id = neighbourhood.business_id JOIN users ON review.user_id = users.user_id WHERE LOWER(neighbourhood.neighbourhood_name) LIKE LOWER('%Downtown%') GROUP BY users.user_id ORDER BY review_count DESC;SELECT users.name, users.user_id, COUNT(review.rid) AS review_count FROM review JOIN neighbourhood ON review.business_id = neighbourhood.business_id JOIN users ON review.user_id = users.user_id WHERE LOWER(neighbourhood.neighbourhood_name) LIKE LOWER('%Downtown%') GROUP BY users.name, users.user_id ORDER BY review_count DESC;","Which users have posted reviews for businesses located in the neighbourhood of ""Downtown"" and how many reviews have they posted?",,"SELECT u.name,
       COUNT(r.rid) AS review_count
FROM review r
JOIN neighbourhood n ON r.business_id = n.business_id
JOIN users u ON r.user_id = u.user_id
WHERE n.neighbourhood_name = 'Downtown'
GROUP BY u.user_id,
         u.name;",,,0,1,0,0,0,3.68,1020,,,,"Use the following table aliases when referencing tables in the query:
-- tip AS t
-- users AS u
-- review AS r
-- checkin AS c
-- business AS b
-- category AS ca
-- neighbourhood AS n
",,,,,,,,False,0.18
